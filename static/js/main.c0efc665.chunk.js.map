{"version":3,"sources":["resources sync /^/.//comments_.*/.json$","Header.js","SearchUser.js","TopNav.js","RatingItem.js","DropdownPeriod.js","Ratings.js","Overlay.js","utils/ParseUtil.js","utils/UsersUtil.js","utils/RatingsUtil.js","App.js","utils/WinnersUtil.js","serviceWorker.js","index.js"],"names":["map","./comments_01.json","./comments_02.json","./comments_03.json","./comments_04.json","./comments_05.json","./comments_06.json","./comments_07.json","./comments_08.json","./comments_09.json","./comments_10.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Header","react_default","a","createElement","className","Component","SearchUser","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filter","event","target","value","toLowerCase","setState","username","props","openUser","handleClearFilter","_this2","_this$props","usernames","visibleUsernames","includes","classContent","concat","length","type","ref","placeholder","onChange","handleFilter","bind","i","key","onClick","handleOpenUser","TopNav","alert","ratings","href","openRules","src_SearchUser_0","NAMES_RUS","bestMembers","mostValuableMembers","mostPopularMembers","mostActiveMembers","bestNewsBots","mrShort","mrLong","mrWhy","mrLoud","mrSmile","mostPopularComments","mostPopularNews","mostPopularJokes","RatingItem","winners","winner","place","scores","description","name","rating","selectedUser","openRating","users","renderWinnerName","renderWinnerPlace","renderWinnerScores","DropdownPeriod","openingContent","month","toggleOpeningContent","openPeriod","handleOpenPeriod","Ratings","data","selectedRatings","_this$props2","changePeriod","src_DropdownPeriod_0","renderSelectedUserButton","src_RatingItem_0","Overlay","content","opening","close","style","width","slice","rate","parseDataToArray","array","comments","row","comment","parseInt","date","message","push","createCommentsArray","temp","result","text","startsWith","concatMessage","concatArray","arrayText","parser","Parser","ontext","trim","decodeEntities","write","end","parseFullComments","startIndex","indexOf","finishIndex","substring","getFullComments","createUsersObj","user","commentsByUsers","forEach","toConsumableArray","createObjCommentsByUsers","RATINGS","days","createRatingsObj","usersObj","daysInMonth","arrayUsersVotes","totalVotes","commentIsNews","Math","round","createArrayUsersByCommentsVotes","sort","b","sortUsersByVotes","arrayUsersQuantities","quantity","createArrayUsersByCommentsQuantities","sortUsersByTotalComments","arrayTop","arrayDown","votes","member","sortUsersByAverageVote","membersObj","members","getMembersRating","arrayMembers","sortUsersByScores","arrayBest","arrayUsersWithLinks","_loop","createArrayUsersWithLinkInComments","arrayWorst","best","worst","sortUsersByCommentsWithLinks","sortUsersByMessagesLength","short","long","sortUsersByMarks","questions","exclamations","smiles","c","addDescriptionMessage","sortCommentsByVotes","sortComments","sortMessagesWithLinksByVotes","commentsWithSmiles","sortMessagesWithSmiles","arrayShort","summ","messages","totalLength","createArrayUsersByAverageLengthMessages","arrayLong","countMarkInCommentsArray","commentsArray","mark","count","split","DEFAULT_MONTH","App","loadedData","activeRating","openingOverlay","_setData","_ref","_this$state","Date","getDate","ratingsObj","selectedObj","nameRating","createSelectedUserObj","src_Header_0","src_TopNav_0","src_Ratings_0","handleChangePeriod","handleOpenRating","apply","src_Overlay_0","handleCloseOverlay","localData","require","console","log","_getDataObjects","url","_formatDate","_loadData","setDate","fetch","then","response","ok","page","newData","catch","err","year","getFullYear","getMonth","day","maxScores","createWinnersObj","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0efc665.chunk.js","sourcesContent":["var map = {\n\t\"./comments_01.json\": 73,\n\t\"./comments_02.json\": 74,\n\t\"./comments_03.json\": 75,\n\t\"./comments_04.json\": 76,\n\t\"./comments_05.json\": 77,\n\t\"./comments_06.json\": 78,\n\t\"./comments_07.json\": 79,\n\t\"./comments_08.json\": 80,\n\t\"./comments_09.json\": 81,\n\t\"./comments_10.json\": 82\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 72;","import React, { Component } from 'react'\nimport './Header.css'\n\nclass Header extends Component {\n  \trender() {       \n\t\treturn (\n\t\t\t<header className=\"Header\">\n\t\t  \t\t<p>\n\t\t\t\t\t<span>minfin</span><span>members</span>\n\t\t  \t\t</p>\n\t\t\t</header>\n\t\t)\n  \t}\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './SearchUser.css'\n\nclass SearchUser extends Component {\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tfilter: ''\n\t\t}\n\t}\n\n\thandleFilter(event) {\n\t\tlet filter = event.target ? event.target.value.toLowerCase() : event      \n        this.setState({ filter })\n\t}\n\n\thandleClearFilter() {\n\t\tthis.setState({ filter: '' })\n\t}\n\n\thandleOpenUser(username) {\n\t\tthis.props.openUser(username)\n\t\tthis.handleClearFilter()\n\t}\n\n  \trender() {       \n  \t\tconst { filter } = this.state,\n  \t\t\t{ usernames, openUser } = this.props\n\n  \t\tlet visibleUsernames = usernames.filter(username => username.toLowerCase().includes(filter)),\n  \t\t\tclassContent = `dropdown-content ${filter.length ? 'opening' : ''}`\n\n\t\treturn (\n\t\t\t<div className='SearchUser'>\n\t\t\t\t<div className='dropdown'>\n\t\t\t\t\t<input type=\"text\" ref='input' \n\t\t\t\t\t\tplaceholder=\"Enter your name...\" \n\t\t\t\t\t\tvalue={ filter } \n\t\t\t\t\t\tonChange={ this.handleFilter.bind(this) }\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ul className={ classContent }>\n\t\t\t\t\t{\n\t\t\t\t\t\tvisibleUsernames.map((username, i) => \n\t\t\t\t\t\t\t<li key={i} onClick={ () => this.handleOpenUser(username) }>{ username }</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n  \t}\n}\n\nexport default SearchUser","import React, { Component } from 'react'\nimport './TopNav.css'\n\nimport SearchUser from './SearchUser'\n\nclass TopNav extends Component {\n\n\topenRules() {\n\t\talert('RULES')\n\t}\n\n  \trender() {\n  \t\tconst { usernames, ratings, openUser } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"topnav\">\n\t\t\t  \t<a href=\"#rules\" onClick={ () => this.openRules() }>Open rules</a>\n\t\t\t  \t<SearchUser usernames={ usernames } ratings={ ratings }  openUser={ openUser } />\n\t\t\t</div>\n\t\t)\n  \t}\n}\n\nexport default TopNav","import React, { Component } from 'react'\nimport './RatingItem.css'\n\nconst NAMES_RUS = {\n\tbestMembers: \t\t\t'лучший форумчанин',\n\tmostValuableMembers: \t'самый ценный форумчанин', \n\tmostPopularMembers: \t'читательские симпатии',\n\tmostActiveMembers: \t\t'заслуженный работник форума',\n\tbestNewsBots: \t\t\t'лучший поставщик новостей',\n\tmrShort: \t\t\t\t'мистер краткость',\n\tmrLong: \t\t\t\t'мистер длинный язык',\n\tmrWhy: \t\t\t\t\t'почемучка месяца',\n\tmrLoud: \t\t\t\t'самый крикливый форумчанин',\n\tmrSmile: \t\t\t\t'самый весёлый форумчанин',\n\tmostPopularComments: \t'лучший комментарий',\n\tmostPopularNews: \t\t'самая популярная новость',\n\tmostPopularJokes: \t\t'самая популярная шутка'\n}\n\n/*\n\tworstNewsBots: \t\t\t'Худший поставщик новостей',\n\tmostPopularWord: \t\t'Самое популярное слово'\n*/\n\nclass RatingItem extends Component {\n\trenderWinnerName(winners) {\n\t\treturn(\n\t\t\t<div className='winner-name-box'>\n\t\t\t{ \n\t\t\t\twinners.length\n\t\t\t\t\t? winners.map((winner, i) => <span key={i}>{ winner.username }</span>) \n\t\t\t\t\t: <span>-</span>\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderWinnerPlace(place) {\n\t\treturn(\n\t\t\t<div className='winner-place-box'>\n\t\t\t\t<div className='winner-circle'>\n\t\t\t\t\t<span>{ place }</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderWinnerScores(scores, description) {\n\t\treturn(\n\t\t\t<div className='winner-scores-box'>\n\t\t\t  \t<div className='winner-circle'>\n\t\t\t  \t\t<span>{ scores || '-' }</span>\n\t\t\t  \t</div>\n\t\t\t  \t\n\t\t\t</div>\n\t\t)\n\t}\n \n  \trender() {\n  \t\tconst { name, rating, winners, selectedUser, openRating } = this.props\n\n  \t\tlet users = winners,\n  \t\t\tplace = 1,\n  \t\t\tscores = winners[0].scores,\n  \t\t\tdescription = winners[0].description\n\n  \t\tif (selectedUser) {\n  \t\t\tusers = selectedUser.length ? [selectedUser[0]] : []\n  \t\t\tplace = selectedUser.length ? selectedUser[0].place : '-'\n  \t\t\tscores = selectedUser.length ? selectedUser[0].scores : '-'\n  \t\t\tdescription = selectedUser.length ? selectedUser[0].description : ''\n  \t\t}\n\n\t\treturn (\n\t\t\t<div className='RatingItem'>\n\t\t\t\t<div className='title'>{ NAMES_RUS[name] }</div>\n\t\t\t\t<div className='winner' onClick={ () => openRating(rating) }>\n\t\t\t\t\t{ this.renderWinnerName(users) }\n\t\t\t\t\t{ this.renderWinnerPlace(place) }\n\t\t\t\t  \t{ this.renderWinnerScores(scores) }\n\t\t\t  \t</div>\n\t\t\t  \t<div className='winner-scores-description'>{ description }</div>\n\t\t  \t</div>\n\t\t)\n  \t}\n}\n\nexport default RatingItem\n","import React, { Component } from 'react'\nimport './DropdownPeriod.css'\n\nclass DropdownPeriod extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\topeningContent: false\n\t\t}\n  \t}\n\n  \ttoggleOpeningContent() {\n  \t\tlet { openingContent } = this.state\n  \t\tthis.setState({ openingContent: !openingContent })\n  \t}\n\n  \thandleOpenPeriod(month) {\n  \t\tthis.toggleOpeningContent()\n  \t\tthis.props.openPeriod(month)\n  \t}\n\n  \trender() {\n  \t\tconst { month } = this.props,\n  \t\t\t{ openingContent } = this.state\n\n  \t\tlet monthes = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],\n  \t\t\tclassContent = `dropdown-content ${openingContent ? 'opening' : ''}`\n\n\t\treturn (\n\t\t\t<div className='DropdownPeriod'>\n\t\t\t\t<div className='dropdown'>\n\t\t\t\t\t<button className='dropbtn'\n\t\t\t\t\t\tonClick={ () => this.toggleOpeningContent() }\n\t\t\t\t\t>Current month: { month }</button>\n\n\t\t\t\t\t<ul className={ classContent }>\n\t\t\t\t\t{\n\t\t\t\t\t\tmonthes.map((month, i) => \n\t\t\t\t\t\t\t<li key={i} onClick={ () => this.handleOpenPeriod(month) } >{ month }</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t  \t\t\n\t\t)\n  \t}\n}\n\nexport default DropdownPeriod\n","import React, { Component } from 'react'\nimport RatingItem from './RatingItem'\nimport DropdownPeriod from './DropdownPeriod'\nimport './Ratings.css'\n\n// import { createUsersObj } from './utils/UsersUtil'\n// import { createRatingsObj } from './utils/RatingsUtil'\n// import { createWinnersObj } from './utils/WinnersUtil'\n\nclass Ratings extends Component {\n\trenderSelectedUserButton() {\n\t\tconst { data, openUser } = this.props\n\n\t\tif (!data.selectedRatings) return null\n\n\t\treturn(\n\t\t\t<div className='selected-user'>\n\t\t\t\tОтобрано по: \n\t\t\t\t<div className='selected-user-btn'>\n\t\t\t\t\t{ data.selectedRatings.username } \n\t\t\t\t\t<button className=\"closebtn\" onClick={ () => openUser('') }>&times;</button>\n\t\t\t\t</div>\n\t\t  \t</div>\n\t\t)\n\t}\n\n  \trender() {\n  \t\tconst { data, month, openRating, changePeriod } = this.props,\n  \t\t\t{ users, ratings, winners, selectedRatings } = data\n\n\t\treturn (\n\t  \t\t<div className=\"Ratings\">\n\t\t\t\t<section>\n\t\t  \t\t{\n\t\t  \t\t\tusers && ratings && winners ? \n\t\t  \t\t\t\t<div>\n\t\t  \t\t\t\t\t<DropdownPeriod month={ month } openPeriod={ changePeriod } />\n\t\t  \t\t\t\t\t{ \n\t\t  \t\t\t\t\t\tthis.renderSelectedUserButton() \n\t\t  \t\t\t\t\t}\n\t\t  \t\t\t\t\t<p>\n\t\t  \t\t\t\t\t\t<span>All members: { Object.keys(users).length }</span><br />\n\t\t  \t\t\t\t\t\t<span>All comments: { data.length }</span><br />\n\t\t  \t\t\t\t\t</p>\n\t\t  \t\t\t\t{\n\t\t  \t\t\t\t\tObject.keys(ratings).map((name, i) => \t\n\t\t  \t\t\t\t\t\t<RatingItem key={i}\n\t\t  \t\t\t\t\t\t\tname={ name }\n\t\t  \t\t\t\t\t\t\trating={ ratings[name] }\n\t\t  \t\t\t\t\t\t\twinners={ winners[name] }\n\t\t  \t\t\t\t\t\t\tselectedUser={ selectedRatings ? selectedRatings[name] : null }\n\t\t  \t\t\t\t\t\t\topenRating={ openRating }\n\t\t  \t\t\t\t\t\t/>\t  \t\t\t\t\t\n\t\t  \t\t\t\t\t)\n\t\t  \t\t\t\t}\n\t\t  \t\t\t\t</div>\n\t\t  \t\t\t: 'Parsing data.....'\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\t// jsonUsers\n\t\t  \t\t}\n\t\t\t\t</section>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t// _getDataObjects() {\n  \t// \tlet users, ratings, winners\n\n  \t// \tconst { data, month } = this.props,\n  \t// \t\tdaysInMonth = new Date(2018, month, 0).getDate()\n\n  \t// \tif (data && data.length) {\n  \t// \t\tusers = createUsersObj(data)\n  \t// \t\tratings = createRatingsObj(data, users, daysInMonth)\n  \t// \t\twinners = createWinnersObj(ratings)\n  \t// \t}\n  \t// \treturn { users, ratings, winners }\n  \t// }\n}\n\nexport default Ratings\n","import React, { Component } from 'react'\nimport './Overlay.css'\n\nclass Overlay extends Component {\n  \trender() {\n\n  \t\tconst { content, opening, close } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"Overlay\" style={{ width: opening ? '100%' : '0%' }}>\n\t\t\t  \t<button className=\"closebtn\" onClick={ () => close() }>&times;</button>\n\n\t\t\t  \t<div className=\"overlay-content\">\n\t\t\t  \tТоп 10 позиций рейтинга:\n\t\t\t  \t{\n\t\t\t  \t\tcontent.slice(0, 10).map((rate, i) => \n\t\t\t  \t\t\t<p key={i}>{i+1}. {rate.username}, score: {rate.scores}</p>\n\t\t\t  \t\t)\n\t\t\t  \t}\n\t\t\t  \t</div>\n\t\t\t</div>\n\t  \t)\n  \t}\n}\n\nexport default Overlay\n","import { Parser } from 'htmlparser2'\n\nexport function parseDataToArray(data) {\n    let array = []\n\n    data = getFullComments(data)\n    array = parseFullComments(data)\n    array = concatArray(array)\n    array = createCommentsArray(array)\n\n    return array\n}\n\nexport function getFullComments(data) {\n        const startMarker = '<div id=\"commentFullList\">',\n            finishMarker = '<div class=\"for-set-comment\">',\n\n            startIndex = data.indexOf(startMarker),\n            finishIndex = data.indexOf(finishMarker)\n\n        return data.substring(startIndex, finishIndex)\n    }\n\nexport function parseFullComments(data) {\n        let arrayText = []\n\n        let parser = new Parser({\n            ontext: (text) => {\n                text = text.trim()\n\n                if ((text.length === 1 && text === '0') ||\n                    (text.length > 1 && text !== 'удаленный комментарий')) {\n\n                    arrayText.push(text)\n                }\n            }\n        }, { decodeEntities: true })\n        \n        parser.write(data)\n        parser.end()\n\n        return arrayText\n    }\n\nexport function concatArray(array) {\n        let i = 0, temp = [], result = []\n\n        while(i < array.length) {\n            if (isScore(array[i])) {\n                if (temp.length > 3) temp = concatMessage(temp)\n                if (temp.length > 0) result.push(temp)\n\n                temp = []\n            }\n            temp.push(array[i++])\n        }\n        return result\n    }\n\nfunction isScore(text) {\n    return (text.startsWith('+') && parseInt(text)) || text === '0'\n}\n\nfunction concatMessage(array) {\n    let i = 3, message = ''\n\n    while (i < array.length) {\n        message += (\" \" + array[i++])\n    }\n    array[3] = message.trim()\n\n    return array.slice(0, 4)\n}\n\nexport function createCommentsArray(array) {\n    let comments = [], i = 0\n\n    while(i < array.length ) {\n        let row = array[i++], comment = {}\n\n        comment.scores = parseInt(row[0])   //comment vote\n        comment.username = row[1]           //comment username\n        comment.date = row[2]               //comment date\n        comment.message = row[3]            //comment message\n\n        if (comment && Object.keys(comment).length === 4\n                && comment.username\n                && comment.username !== 'undefined' \n                && comment.username.length) {\n\n            comments.push(comment)\n        }\n    }\n    return comments\n}\n","export function createUsersObj(data) {\n\tlet commentsByUsers = createObjCommentsByUsers(data)\n\n\treturn commentsByUsers\n}\n\nfunction createObjCommentsByUsers(comments) {\n\t// return { username: [ comments ] }\n\n\tlet user = '', temp = [], commentsByUsers = {} \n\n\tcomments.forEach(comment => {\n\t\tuser = comment.username\n\t\ttemp = commentsByUsers[user] || []\n\t\tcommentsByUsers[user] = [ ...temp, comment ]\t\t\n\t})\n\n\treturn commentsByUsers\t\n}","const RATINGS = {\n\tbestMembers: [],\n\tmostActiveMembers: [],\n\tmostPopularMembers: [],\n\tmostValuableMembers: [],\n\tbestNewsBots: [],\n\tmrShort: [],\n\tmrLong: [],\n\tmrWhy: [],\n\tmrLoud: [],\n\tmrSmile: [],\n\tmostPopularComments: [],\n\tmostPopularNews: [],\n\tmostPopularJokes: []\n}\n\nlet commentsByUsers = {}, // { user: [ comments ] }\n\tdays = 30\n\nexport function createRatingsObj(comments, usersObj, daysInMonth) {\n\n\tcommentsByUsers = usersObj\n\tdays = daysInMonth\n\n\tRATINGS.mostPopularMembers\t = sortUsersByVotes()\n\tRATINGS.mostActiveMembers\t = sortUsersByTotalComments()\n\tRATINGS.mostValuableMembers\t = sortUsersByAverageVote()\n\tRATINGS.bestMembers\t\t\t = sortUsersByScores()\n\tRATINGS.bestNewsBots\t\t = sortUsersByCommentsWithLinks().best\n\t// RATINGS.worstNewsBots\t \t = sortUsersByCommentsWithLinks().worst\n\tRATINGS.mrShort\t\t\t\t = sortUsersByMessagesLength().short\n\tRATINGS.mrLong\t\t\t\t = sortUsersByMessagesLength().long\n\tRATINGS.mrWhy\t\t\t\t = sortUsersByMarks().questions\n\tRATINGS.mrLoud\t\t\t\t = sortUsersByMarks().exclamations\n\tRATINGS.mrSmile\t\t\t\t = sortUsersByMarks().smiles\n\tRATINGS.mostPopularComments\t = sortComments(comments)\n\tRATINGS.mostPopularNews\t\t = sortMessagesWithLinksByVotes(comments)\n\tRATINGS.mostPopularJokes\t = sortMessagesWithSmiles(comments)\n\t// RATINGS.mostPopularWord\t \t = sortWordsInMessages(comments)\n\n\treturn RATINGS\n}\n\n/*===========================================================\n\tCOMMON FUNCTIONS\n===========================================================*/\nfunction sortCommentsByVotes(comments) {\n\treturn comments.sort((a, b) => {\n\t\treturn b.scores - a.scores\n\t})\n}\n\nfunction addDescriptionMessage(comments) {\n\tcomments.forEach(c => {\n\t\tc.description = `\n\t\t\t${c.message ? c.message.substring(0, 200) : 'error'}...\n\t\t\tКоличество голосов: ${c.scores}\n\t\t`\n\t})\n}\n\nfunction commentIsNews(comment) {\n\treturn comment.message && comment.message.indexOf('http') >= 0\n}\n\nfunction createArrayUsersByCommentsQuantities() {\n\tlet arrayUsersQuantities = [], quantity = 0, scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tquantity = commentsByUsers[username].length\n\t\tscores = Math.round(quantity / days * 10) / 10\n\n\t\tarrayUsersQuantities.push({ \n\t\t\tusername,\n\t\t\tquantity,\n\t\t\tdays,\n\t\t\tscores,\n\t\t\tdescription: `Среднее количество комментариев в день: ${scores}`\n\t\t})\n\t}\n\n\treturn arrayUsersQuantities\n}\n\nfunction createArrayUsersByCommentsVotes() {\n\tlet arrayUsersVotes = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\t// comments with news not includes!\n\t\t\tif (!commentIsNews(comment)) {\n\t\t\t\ttotalVotes += comment.scores || 0\n\t\t\t}\n\t\t})\n\n\t\tscores = Math.round(totalVotes / days * 10) / 10\n\n\t\tarrayUsersVotes.push({ \n\t\t\tusername,\n\t\t\ttotalVotes,\n\t\t\tdays,\n\t\t\tscores,\n\t\t\tdescription: `Среднее количество полученных голосов в день: ${scores}`\n\t\t})\n\t}\n\n\treturn arrayUsersVotes\n}\n\nfunction createArrayUsersWithLinkInComments() {\n\tlet arrayUsersWithLinks = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet quantity = 0, totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\tif (commentIsNews(comment)) {\n\t\t\t\tquantity++\n\t\t\t\ttotalVotes += comment.scores\n\t\t\t}\n\t\t})\n\n\t\t// let scores = (totalVotes && quantity) ? (totalVotes / quantity) : 0\n\t\tif (quantity && quantity >= days) {\n\t\t\tscores = Math.round(totalVotes / quantity * 10) / 10\n\n\t\t\tarrayUsersWithLinks.push({ \n\t\t\t\tusername,\n\t\t\t\ttotalVotes,\n\t\t\t\tquantity,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя оценка за каждую оставленную новость: ${scores}`\n\t\t\t})\n\t\t}\n\t}\n\n\treturn arrayUsersWithLinks\n}\n\n// function createArrayUsersWithoutLinkInComments() {\n// \tlet arrayUsersWithoutLinks = [], scores = 0\n\n// \tfor (let username in commentsByUsers) {\n// \t\tlet quantity = 0\n// \t\tcommentsByUsers[username].forEach(comment => {\n// \t\t\tif (!commentIsNews(comment)) quantity++\n// \t\t})\n\n// \t\tif (quantity) {\n// \t\t\tscores = Math.round(quantity / days * 10) / 10\n\n// \t\t\tarrayUsersWithoutLinks.push({ \n// \t\t\t\tusername,\n// \t\t\t\tquantity,\n// \t\t\t\tdays,\n// \t\t\t\tscores\n// \t\t\t})\n// \t\t}\n// \t}\n\n// \treturn arrayUsersWithoutLinks\n// }\n\nfunction createArrayUsersByAverageLengthMessages() {\n\tlet array = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet summ = 0, messages = commentsByUsers[username]\n\n\t\tmessages.forEach(comment => { \n\t\t\tif (comment.message) summ += comment.message.length\n\t\t}) \n\n\t\tscores = Math.round(summ / messages.length * 10) / 10\n\n\t\tif (username !== 'undefined' && messages.length >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername,\n\t\t\t\ttotalLength: summ,\n\t\t\t\tquantity: messages.length,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя длина оставленных сообщений: ${scores}`\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST MEMBER\n*/\n\nfunction getMembersRating() {\n\tlet scores = 0, members = {}, // { username: scores }\n\t\tratings = [ \n\t\t\tRATINGS.mostActiveMembers, \n\t\t\tRATINGS.mostPopularMembers, \n\t\t\tRATINGS.mostValuableMembers \n\t\t]\n\n\t/*\n\t\tconcat ratings \n\t\tscore = summ (place in the ranking / length of ranking) (%)\n\t*/\n\tratings.forEach(rating => {\n\t\trating.forEach((user, i) => {\n\t\t\tscores = (rating.length - i) / rating.length * 100 / ratings.length\n\n\t\t\tif (!members[user.username]) members[user.username] = scores\n\t\t\telse members[user.username] += scores\n\t\t})\n\t})\n\n\treturn members\n}\n\nfunction sortUsersByScores() {\n\tlet membersObj = getMembersRating(), arrayMembers = [], scores = 0\n\n\tfor (let username in membersObj) {\n\t\tscores = Math.round(membersObj[username] * 10) / 10\n\n\t\tarrayMembers.push({ \n\t\t\tusername, \n\t\t\tscores,\n\t\t\tdescription: `Лучший показатель активность + полезность: ${scores}%`\n\t\t})\n\t}\n\n\tarrayMembers.sort((a, b) => b.scores - a.scores )\n\n\treturn arrayMembers\t\n}\n\n/*===========================================================\n\tMOST POPULAR MEMBER\n\tscores = total votes of member / days\n*/\n\nfunction sortUsersByVotes() {\n\tlet array = createArrayUsersByCommentsVotes()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tMOST POPULAR COMMENT\n\tscores = comment with max vote\n*/\n\nfunction sortComments(comments) {\n\taddDescriptionMessage(comments)\n\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\treturn sortedComments\n}\n\n/*===========================================================\n\tMOST ACTIVE MEMBER\n\tscores = quantity of comments / days\n*/\n\nfunction sortUsersByTotalComments() {\n\tlet array = createArrayUsersByCommentsQuantities()\n\t// let array = createArrayUsersWithoutLinkInComments()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*==========================================================\n\tMOST VALUABLE MEMBER\n\tscores = total votes of member / quantity of comments\n*/\n\nfunction sortUsersByAverageVote() {\n\tlet arrayTop = [], arrayDown = [], \n\t\tquantity = 0, votes = 0, scores = 0, comment = {},\n\t\t{ mostPopularMembers } = RATINGS\n\n\tmostPopularMembers.forEach(member => {\n\t\tvotes = member.totalVotes\n\t\tquantity = commentsByUsers[member.username].length\n\t\tscores = Math.round(votes / quantity * 10) / 10\n\t\tcomment = {\n\t\t\tusername: member.username,\n\t\t\tvotes,\n\t\t\tquantity,\n\t\t\tscores,\n\t\t\tdescription: `Лучшая средняя оценка за каждый комментарий: ${scores}`\n\t\t}\n\n\t\tif (quantity >= days) arrayTop.push(comment)\n\t\telse arrayDown.push(comment)\n\t})\n\n\tarrayTop.sort((a, b) => b.scores - a.scores )\n\tarrayDown.sort((a, b) => b.scores - a.scores )\n\n\treturn arrayTop.concat(arrayDown)\n}\n\n/*===========================================================\n\tBEST NEWS BOT\n\tscores = max total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n\n\tWORST NEWS BOT\n\tscores = min total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByCommentsWithLinks() {\n\tlet arrayBest = createArrayUsersWithLinkInComments(days),\n\t\tarrayWorst = [].concat(arrayBest),\n\t\tresult = {}\n\n\tarrayBest.sort((a, b) => b.scores - a.scores )\n\tarrayWorst.sort((a, b) => a.scores - b.scores )\n\n\tresult.best = arrayBest\n\tresult.worst = arrayWorst\n\n\treturn result\n}\n\n/*===========================================================\n\tMR. SHORT\n\tscores = min total length of message / quantity of message\n\t(quantity must be more than \"days\")\n\n\tMR. LONG TONGUE\n\tscores = max total length of message / quantity of message\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByMessagesLength() {\n\tlet arrayShort = createArrayUsersByAverageLengthMessages(days),\n\t\tarrayLong = [].concat(arrayShort),\n\t\tresult = {}\n\n\tarrayShort.sort((a, b) => a.scores - b.scores)\n\tarrayLong.sort((a, b) => b.scores - a.scores)\n\n\tresult.short = arrayShort\n\tresult.long = arrayLong\n\n\treturn result\n}\n\n/*===========================================================\n\tMOST POPULAR NEWS\n\tscores = max total votes in comment with link\n*/\n\nfunction sortMessagesWithLinksByVotes(comments) {\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\tlet commentsWithLinks = sortedComments\n\t\t.filter(comment => {\n\t\t\tif (comment.message) return comment.message.indexOf('http') >= 0 \n\t\t})\n\n\treturn commentsWithLinks\n}\n\n/*===========================================================\n\tMOST POPULAR WORD\n\tscores = max popular word in comments / days\n*/\n\nfunction sortWordsInMessages(comments) {\n\tlet array = [], scores = 0, wordsObj = createWordsObj(comments)\n\n\tfor (let word in wordsObj) {\n\t\tscores = Math.round(wordsObj[word] / days * 10) / 10\n\n\t\tif (scores > 1) {\n\t\t\tarray.push({\n\t\t\t\tword,\n\t\t\t\tquantity: wordsObj[word],\n\t\t\t\tdays,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\tarray.sort((a, b) => b.scores - a.scores)\n\n\treturn array\n}\n\nfunction createWordsObj(comments) {\n\tlet wordsObj = {}, wordScores = 0\n\n\tcomments.forEach(comment => {\n\t\tlet arrayMessage = createArrayWordsFromCommentMessage(comment)\n\n\t\tarrayMessage.forEach(word => {\n\t\t\twordScores = wordsObj[word] ? wordsObj[word] + 1 : 1\n\t\t\twordsObj[word] = wordScores\n\t\t})\n\t})\n\treturn wordsObj\n}\n\nfunction createArrayWordsFromCommentMessage(comment) {\n\tlet message = comment.message \n\t\t? comment.message.toLowerCase()\n\t\t\t.replace(/[.,?!()-=*1234567890]/g, '')\n\t\t: ''\n\n\treturn message.split(' ').filter(word => word.length > 3)\n}\n\n/*===========================================================\n\tMR.WHY + MR.EXCLAMATION + MR.SMILE\n\tscores = max quantity marks in comments / days\n*/\n\nfunction sortUsersByMarks() {\n\tlet questions = [], exclamations = [], smiles = [], comments = [], scores = 0\n\n\tObject.keys(commentsByUsers).forEach(username => {\n\t\tcomments = commentsByUsers[username]\n\n\t\tif (comments.length > days) {\n\t\t\tscores = countMarkInCommentsArray(comments, '?')\n\t\t\tif (scores) questions.push({ \n\t\t\t\tusername, scores,\n\t\t\t\tdescription: `Задает вопрос в каждом из ${scores} сообщений`\n\t\t\t})\n\n\t\t\tscores = countMarkInCommentsArray(comments, '!')\n\t\t\tif (scores) exclamations.push({ \n\t\t\t\tusername, scores,\n\t\t\t\tdescription: `Восклицает в каждом из ${scores} сообщений`\n\t\t\t})\n\n\t\t\tscores = countMarkInCommentsArray(comments, ':)')\n\t\t\tscores += countMarkInCommentsArray(comments, ';)')\n\t\t\tif (scores) smiles.push({ \n\t\t\t\tusername, scores,\n\t\t\t\tdescription: `Шутит в каждом из ${scores} сообщений`\n\t\t\t})\n\t\t}\n\t})\n\n\tquestions.sort((a, b) => a.scores - b.scores)\n\texclamations.sort((a, b) => a.scores - b.scores)\n\tsmiles.sort((a, b) => a.scores - b.scores)\n\n\treturn { questions, exclamations, smiles }\n}\n\nfunction countMarkInCommentsArray(commentsArray, mark) {\n\tlet count = 0, temp = []\n\n\tcommentsArray.forEach(comment => {\n\t\tif (comment.message) {\n\t\t\ttemp = comment.message.split(mark) || []\n\t\t\tif (temp.length) count += temp.length - 1\n\t\t}\n\t})\n\n\tif (count) count = Math.round((commentsArray.length / count) * 10) / 10\n\n\treturn count\n}\n\n/*===========================================================\n\tMOST POPULAR JOKE\n\tscores = max votes with comment includes smiles\n*/\n\nfunction sortMessagesWithSmiles(comments) {\n\tlet commentsWithSmiles = comments.filter(comment => {\n\t\tif (comment.message \n\t\t\t&& (comment.message.includes(':)') || comment.message.includes(';)'))) \n\t\t\t\treturn comment\n\t})\n\n\tcommentsWithSmiles.sort((a, b) => b.scores - a.scores)\n\n\treturn commentsWithSmiles\n}","import React, { Component } from 'react'\nimport Header from './Header'\nimport TopNav from './TopNav'\nimport Ratings from './Ratings'\nimport Overlay from './Overlay'\nimport './App.css'\n\nimport { parseDataToArray } from './utils/ParseUtil'\nimport { createUsersObj } from './utils/UsersUtil'\nimport { createRatingsObj } from './utils/RatingsUtil'\nimport { createWinnersObj, createSelectedUserObj } from './utils/WinnersUtil'\n\nconst DEFAULT_MONTH = 10\n// \tdaysInMonth = new Date(2018, MONTH, 0).getDate()\n\n// let localData = require('./resources/comments_' + (MONTH > 9 ? MONTH : '0' + MONTH) + '.json')\n// let localData = null\n\n// import jsonfile from 'jsonfile'\n\n\nclass App extends Component {\n  \tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tmonth: DEFAULT_MONTH, \n\t\t\tdata: null,\n\t\t\tloadedData: null,\n\t\t\tselectedUser: '',\n\t\t\tactiveRating: [],\n\t\t\topeningOverlay: false\n\t\t}\n  \t}\n\n  \tcomponentWillMount() {\n  \t\tthis._setData(DEFAULT_MONTH)\n  \t}\n\n  \thandleOpenRating(rating) {\n  \t\tthis.setState({ \n  \t\t\tactiveRating: rating,\n  \t\t\topeningOverlay: true\n  \t\t})\n  \t}\n\n  \thandleCloseOverlay() {\n  \t\tthis.setState({ openingOverlay: false })\n  \t}\n\n  \thandleChangePeriod(month) {\n  \t\tif (this.state.month !== month)\tthis._setData(month)\n  \t}\n\n  \topenUser(selectedUser) {\n  \t\tthis.setState({ selectedUser })\n  \t}\n\n  \trender() {\n\n  \t\tconst { month, data, selectedUser, loadedData, activeRating, openingOverlay } = this.state,\n  \t\t\tdaysInMonth = new Date(2018, month, 0).getDate(),\n  \t\t\tusernames = Object.keys(data.users)\n\n  \t\tif (selectedUser) data.selectedRatings = createSelectedUserObj(data.ratings, selectedUser)\n  \t\telse data.selectedRatings = null\n\n\n\t\treturn (\n\t  \t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<TopNav \n\t\t\t\t\tusernames={ usernames }\n\t\t\t\t\topenUser={ this.openUser.bind(this) } \n\t\t\t\t/>\n\n\t\t\t\t{ \n\t\t\t\t\tdata \n\t\t\t\t\t\t? \t<Ratings \n\t\t\t\t\t\t\t\tdata={ data } \n\t\t\t\t\t\t\t\tmonth={ month } \n\t\t\t\t\t\t\t\tchangePeriod={ this.handleChangePeriod.bind(this) }\n\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) } \n\t\t\t\t\t\t\t\topenUser={ this.openUser.bind(this) } \n\t\t\t\t\t\t\t/> \n\n\t\t\t\t\t\t: !data && loadedData.length === daysInMonth\n\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<Ratings \n\t\t\t\t\t\t\t\t\tdata={ [].concat(...loadedData) } \n\t\t\t\t\t\t\t\t\tmonth={ month } \n\t\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) }\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Loading data.......' \n\t\t\t\t}\n\n\t\t\t\t<Overlay \n\t\t\t\t\tcontent={ activeRating } \n\t\t\t\t\topening={ openingOverlay } \n\t\t\t\t\tclose={ this.handleCloseOverlay.bind(this) } \n\t\t\t\t/>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_setData(month) {\n  \t\tlet localData = require('./resources/comments_' + (month > 9 ? month : '0' + month) + '.json')\n\n  \t\tif (localData) {\n  \t\t\tconsole.log('success load local data from', month, 'month with', localData.length, 'comments')\n\n  \t\t\tlet data = this._getDataObjects(localData, month)\n  \t\t\tdata.length = localData.length\n\n  \t\t\tthis.setState({ month, data })\n\n  \t\t} else {\n\t  \t\tconsole.log('no local data! load from url...')\n\n  \t\t\tlet date = new Date(2018, month - 1, 1), \n  \t\t\t\tdaysInMonth = new Date(2018, month, 0).getDate(), \n  \t\t\t\turl = ''\n\n  \t\t\tfor (let i = 0; i < daysInMonth; i++) {\n\t\t\t\turl = 'https://minfin.com.ua/' + this._formatDate(date) + '/currency/'\n\t\t\t\tthis._loadData(url)\t\t\n\t\t\t\tdate.setDate(date.getDate() + 1)\n\t\t\t}\n  \t\t}\n  \t}\n\n  \t_loadData(url) {\n\t\tfetch(\"https://cors.io/?\" + url)\n\t  \t\t.then(response => {\n\t\t  \t\tconsole.log(url + \" -> \" + response.ok);\n\t\t  \t\tif(response.ok) {\n\t\t\t\t\treturn response.text()\n\t\t  \t\t} else {\n\t\t\t\t\t// throw new Error(\"Can't get data from \" + url)\n\t\t  \t\t}         \n\t  \t\t})\n\t  \t\t.then(page => {\n\t\t  \t\tlet newData = page ? parseDataToArray(page) : [],\n\t\t  \t\t\t{ loadedData } = this.state\n\n\t\t  \t\tloadedData.push(newData)\n\t\t  \t\tthis.setState({ loadedData })\n\n\t\t  \t\t// this._writeJsonFile(data)\n\t  \t\t})\n\t  \t\t.catch(err => {\n\t\t\t\tconsole.log(\"failed to load \", url, err.message)\n\t  \t\t})\n  \t}\n\n  \t_formatDate(date) {\n\t\tlet year = date.getFullYear(),\n\t\t\tmonth = date.getMonth() + 1,\n\t\t\tday = date.getDate()\n\n\t\tif (day < 10) {\n\t\t  day = '0' + day;\n\t\t}\n\t\tif (month < 10) {\n\t\t  month = '0' + month;\n\t\t}\n\n\t\treturn (year + '/' + month + '/' + day)\n  \t}\n\n  \t_getDataObjects(data, month) {\n  \t\tlet users, ratings, winners\n\n  \t\tconst daysInMonth = new Date(2018, month, 0).getDate()\n\n  \t\tif (data && data.length) {\n  \t\t\tusers = createUsersObj(data)\n  \t\t\tratings = createRatingsObj(data, users, daysInMonth)\n  \t\t\twinners = createWinnersObj(ratings)\n  \t\t}\n  \t\treturn { users, ratings, winners }\n  \t}\n\n  \t// \t_writeJsonFile(data) {\n\t// \t\tconst file = '../tmp/data.json'\n \n\t// \t\tjsonfile.writeFile(file, JSON.stringify(data))\n  \t// \t\t\t.then(res => {\n  \t//   \t\t\tconsole.log('Write complete')\n  \t// \t\t\t})\n  \t// \t\t\t.catch(error => console.error(error))\t\n  \t// \t}\n}\n\nexport default App\n","export function createWinnersObj(ratingsObj) {\n\tlet winners = {}, // { nameRating: [] }\n\t\tmaxScores = 0\n\n\tObject.keys(ratingsObj).forEach(name => {\n\t\tmaxScores = ratingsObj[name][0].scores\n\t\t\n\t\twinners[name] = ratingsObj[name].filter(member => member.scores === maxScores)\t\t\n\t})\n\n\treturn winners\n}\n\nexport function createSelectedUserObj(ratingsObj, username) {\n\tlet selectedObj = {}, // { nameRating: [] }\n\t\tmaxScores = 0\n\n\tObject.keys(ratingsObj).forEach(nameRating => {\t\t\n\t\tselectedObj[nameRating] = ratingsObj[nameRating].filter((member, i) => {\n\t\t\tif(member.username === username) {\n\t\t\t\tmember.place = i+1 \n\t\t\t\treturn member\n\t\t\t}\n\t\t})\t\t\n\t})\n\n\tselectedObj.username = username\n\n\treturn selectedObj\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}