{"version":3,"sources":["resources sync /^/.//comments_.*/.json$","Header.js","TopNav.js","RatingItem.js","DropdownPeriod.js","utils/UsersUtil.js","utils/RatingsUtil.js","Ratings.js","utils/WinnersUtil.js","Overlay.js","utils/ParseUtil.js","App.js","serviceWorker.js","index.js"],"names":["map","./comments_01.json","./comments_02.json","./comments_03.json","./comments_04.json","./comments_05.json","./comments_06.json","./comments_07.json","./comments_08.json","./comments_09.json","./comments_10.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Header","react_default","a","createElement","className","Component","TopNav","alert","_this","this","href","onClick","openRules","type","placeholder","NAMES_RUS","bestMembers","mostValuableMembers","mostPopularMembers","mostActiveMembers","bestNewsBots","worstNewsBots","mrShort","mrLong","mrWhy","mrLoud","mrSmile","mostPopularComments","mostPopularNews","mostPopularJokes","mostPopularWord","RatingItem","_this$props","props","name","rating","winners","openRating","winner","i","key","username","description","DropdownPeriod","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","openingContent","setState","month","toggleOpeningContent","openPeriod","_this2","classContent","concat","handleOpenPeriod","createUsersObj","data","comments","user","temp","commentsByUsers","forEach","comment","toConsumableArray","createObjCommentsByUsers","RATINGS","days","createRatingsObj","usersObj","daysInMonth","array","arrayUsersVotes","scores","totalVotes","commentIsNews","Math","round","push","createArrayUsersByCommentsVotes","sort","b","sortUsersByVotes","arrayUsersQuantities","quantity","length","createArrayUsersByCommentsQuantities","sortUsersByTotalComments","votes","member","sortUsersByAverageVote","membersObj","members","ratings","getMembersRating","arrayMembers","sortUsersByScores","sortUsersByCommentsWithLinks","best","worst","sortUsersByMessagesLength","short","long","sortUsersByMarks","questions","exclamations","smiles","c","message","substring","addDescriptionMessage","sortCommentsByVotes","sortComments","filter","indexOf","sortMessagesWithLinksByVotes","commentsWithSmiles","includes","sortMessagesWithSmiles","wordsObj","wordScores","toLowerCase","replace","split","word","createArrayWordsFromCommentMessage","createWordsObj","sortWordsInMessages","arrayBest","arrayUsersWithLinks","_loop","createArrayUsersWithLinkInComments","arrayWorst","result","arrayShort","summ","messages","totalLength","createArrayUsersByAverageLengthMessages","arrayLong","countMarkInCommentsArray","commentsArray","mark","count","Ratings","changePeriod","_this$_getDataObjects","_getDataObjects","users","src_DropdownPeriod_0","src_RatingItem_0","_this$props2","Date","getDate","WINNERS","maxScores","createWinnersObj","Overlay","content","opening","close","style","width","slice","rate","parseDataToArray","row","parseInt","date","createCommentsArray","text","startsWith","concatMessage","concatArray","arrayText","parser","Parser","ontext","trim","decodeEntities","write","end","parseFullComments","startIndex","finishIndex","getFullComments","DEFAULT_MONTH","App","localData","loadedData","activeRating","openingOverlay","_setData","_ref","_this$state","src_Header_0","src_TopNav_0","src_Ratings_0","handleChangePeriod","bind","handleOpenRating","apply","src_Overlay_0","handleCloseOverlay","require","console","log","url","_formatDate","_loadData","setDate","fetch","then","response","ok","page","newData","catch","err","year","getFullYear","getMonth","day","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad5311ec.chunk.js","sourcesContent":["var map = {\n\t\"./comments_01.json\": 71,\n\t\"./comments_02.json\": 72,\n\t\"./comments_03.json\": 73,\n\t\"./comments_04.json\": 74,\n\t\"./comments_05.json\": 75,\n\t\"./comments_06.json\": 76,\n\t\"./comments_07.json\": 77,\n\t\"./comments_08.json\": 78,\n\t\"./comments_09.json\": 79,\n\t\"./comments_10.json\": 80\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70;","import React, { Component } from 'react'\nimport './Header.css'\n\nclass Header extends Component {\n  \trender() {       \n\t\treturn (\n\t\t\t<header className=\"Header\">\n\t\t  \t\t<p>\n\t\t\t\t\t<span>minfin</span><span>members</span>\n\t\t  \t\t</p>\n\t\t\t</header>\n\t\t)\n  \t}\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './TopNav.css'\n\nclass TopNav extends Component {\n\n\topenRules() {\n\t\talert('RULES')\n\t}\n\n  \trender() {       \n\t\treturn (\n\t\t\t<div className=\"topnav\">\n\t\t\t  \t<a href=\"#rules\" onClick={ () => this.openRules() }>Open rules</a>\n\t\t\t  \t<input type=\"text\" placeholder=\"Enter your name...\" />\n\t\t\t</div>\n\t\t)\n  \t}\n}\n\nexport default TopNav","import React, { Component } from 'react'\nimport './RatingItem.css'\n\nconst NAMES_RUS = {\n\tbestMembers: \t\t\t'Лучший форумчанин',\n\tmostValuableMembers: \t'Самый ценный форумчанин', \n\tmostPopularMembers: \t'Любимчик публики',\n\tmostActiveMembers: \t\t'Заслуженный работник форума',\n\tbestNewsBots: \t\t\t'Лучший поставщик новостей',\n\tworstNewsBots: \t\t\t'Худший поставщик новостей',\n\tmrShort: \t\t\t\t'Мистер краткость',\n\tmrLong: \t\t\t\t'Мистер длинный язык',\n\tmrWhy: \t\t\t\t\t'Почемучка месяца',\n\tmrLoud: \t\t\t\t'Самый крикливый форумчанин',\n\tmrSmile: \t\t\t\t'Самый весёлый форумчанин',\n\tmostPopularComments: \t'Лучший комментарий',\n\tmostPopularNews: \t\t'Самая популярная новость',\n\tmostPopularJokes: \t\t'Самая популярная шутка',\n\tmostPopularWord: \t\t'Самое популярное слово'\n}\n\nclass RatingItem extends Component {\n  \trender() {\n  \t\tlet { name, rating, winners, openRating } = this.props\n\n\t\treturn (\n\t\t\t<div className='RatingItem'>\n\t\t\t\t<div className='title'>{ NAMES_RUS[name] }</div>\n\n\t\t\t\t<div className='winner' onClick={ () => openRating(rating) }>\n\t\t\t\t\t<div className='winner-name'>\n\t\t\t\t\t{ \n\t\t\t\t\t\twinners.map((winner, i) => <p key={i}>{ winner.username }</p>) \n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t  \t\t\t<div className='winner-scores'>{ winners[0].description }</div>\n\t\t  \t\t</div>\n\t\t  \t</div>\n\t\t)\n  \t}\n}\n\nexport default RatingItem\n","import React, { Component } from 'react'\nimport './DropdownPeriod.css'\n\nclass DropdownPeriod extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\topeningContent: false\n\t\t}\n  \t}\n\n  \ttoggleOpeningContent() {\n  \t\tlet { openingContent } = this.state\n  \t\tthis.setState({ openingContent: !openingContent })\n  \t}\n\n  \thandleOpenPeriod(month) {\n  \t\tthis.toggleOpeningContent()\n  \t\tthis.props.openPeriod(month)\n  \t}\n\n  \trender() {\n  \t\tconst { month } = this.props,\n  \t\t\t{ openingContent } = this.state\n\n  \t\tlet monthes = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],\n  \t\t\tclassContent = `dropdown-content ${openingContent ? 'opening' : ''}`\n\n\t\treturn (\n\t\t\t<div className='DropdownPeriod'>\n\t\t\t\t<div className='dropdown'>\n\t\t\t\t\t<button className='dropbtn'\n\t\t\t\t\t\tonClick={ () => this.toggleOpeningContent() }\n\t\t\t\t\t>Current month: { month }</button>\n\n\t\t\t\t\t<div className={ classContent }>\n\t\t\t\t\t{\n\t\t\t\t\t\tmonthes.map((month, i) => \n\t\t\t\t\t\t\t<button key={i} onClick={ () => this.handleOpenPeriod(month) } >{ month }</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t  \t\t\n\t\t)\n  \t}\n}\n\nexport default DropdownPeriod\n","export function createUsersObj(data) {\n\tlet commentsByUsers = createObjCommentsByUsers(data)\n\n\treturn commentsByUsers\n}\n\nfunction createObjCommentsByUsers(comments) {\n\t// return { username: [ comments ] }\n\n\tlet user = '', temp = [], commentsByUsers = {} \n\n\tcomments.forEach(comment => {\n\t\tuser = comment.username\n\t\ttemp = commentsByUsers[user] || []\n\t\tcommentsByUsers[user] = [ ...temp, comment ]\t\t\n\t})\n\n\treturn commentsByUsers\t\n}","const RATINGS = {\n\tbestMembers: [],\n\tmostActiveMembers: [],\n\tmostPopularMembers: [],\n\tmostValuableMembers: [],\n\tbestNewsBots: [],\n\tworstNewsBots: [],\n\tmrShort: [],\n\tmrLong: [],\n\tmrWhy: [],\n\tmrLoud: [],\n\tmrSmile: [],\n\tmostPopularComments: [],\n\tmostPopularNews: [],\n\tmostPopularJokes: [],\n\tmostPopularWord: []\n}\n\nlet commentsByUsers = {}, // { user: [ comments ] }\n\tdays = 30\n\nexport function createRatingsObj(comments, usersObj, daysInMonth) {\n\n\tcommentsByUsers = usersObj\n\tdays = daysInMonth\n\n\tRATINGS.mostPopularMembers\t = sortUsersByVotes()\n\tRATINGS.mostActiveMembers\t = sortUsersByTotalComments()\n\tRATINGS.mostValuableMembers\t = sortUsersByAverageVote()\n\tRATINGS.bestMembers\t\t\t = sortUsersByScores()\n\tRATINGS.bestNewsBots\t\t = sortUsersByCommentsWithLinks().best\n\tRATINGS.worstNewsBots\t \t = sortUsersByCommentsWithLinks().worst\n\tRATINGS.mrShort\t\t\t\t = sortUsersByMessagesLength().short\n\tRATINGS.mrLong\t\t\t\t = sortUsersByMessagesLength().long\n\tRATINGS.mrWhy\t\t\t\t = sortUsersByMarks().questions\n\tRATINGS.mrLoud\t\t\t\t = sortUsersByMarks().exclamations\n\tRATINGS.mrSmile\t\t\t\t = sortUsersByMarks().smiles\n\tRATINGS.mostPopularComments\t = sortComments(comments)\n\tRATINGS.mostPopularNews\t\t = sortMessagesWithLinksByVotes(comments)\n\tRATINGS.mostPopularJokes\t = sortMessagesWithSmiles(comments)\n\tRATINGS.mostPopularWord\t \t = sortWordsInMessages(comments)\n\n\treturn RATINGS\n}\n\n/*===========================================================\n\tCOMMON FUNCTIONS\n===========================================================*/\nfunction sortCommentsByVotes(comments) {\n\treturn comments.sort((a, b) => {\n\t\treturn b.scores - a.scores\n\t})\n}\n\nfunction addDescriptionMessage(comments) {\n\tcomments.forEach(c => {\n\t\tc.description = `\n\t\t\t${c.message ? c.message.substring(0, 200) : 'error'}...\n\t\t\tКоличество голосов: ${c.scores}\n\t\t`\n\t})\n}\n\nfunction commentIsNews(comment) {\n\treturn comment.message && comment.message.indexOf('http') >= 0\n}\n\nfunction createArrayUsersByCommentsQuantities() {\n\tlet arrayUsersQuantities = [], quantity = 0, scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tquantity = commentsByUsers[username].length\n\t\tscores = Math.round(quantity / days * 10) / 10\n\n\t\tarrayUsersQuantities.push({ \n\t\t\tusername,\n\t\t\tquantity,\n\t\t\tdays,\n\t\t\tscores,\n\t\t\tdescription: `Среднее количество комментариев в день: ${scores}`\n\t\t})\n\t}\n\n\treturn arrayUsersQuantities\n}\n\nfunction createArrayUsersByCommentsVotes() {\n\tlet arrayUsersVotes = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\t// comments with news not includes!\n\t\t\tif (!commentIsNews(comment)) \n\t\t\t\ttotalVotes += comment.scores\n\t\t})\n\n\t\tscores = Math.round(totalVotes / days * 10) / 10\n\n\t\tarrayUsersVotes.push({ \n\t\t\tusername,\n\t\t\ttotalVotes,\n\t\t\tdays,\n\t\t\tscores,\n\t\t\tdescription: `Среднее количество полученных голосов в день: ${scores}`\n\t\t})\n\t}\n\n\treturn arrayUsersVotes\n}\n\nfunction createArrayUsersWithLinkInComments() {\n\tlet arrayUsersWithLinks = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet quantity = 0, totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\tif (commentIsNews(comment)) {\n\t\t\t\tquantity++\n\t\t\t\ttotalVotes += comment.scores\n\t\t\t}\n\t\t})\n\n\t\t// let scores = (totalVotes && quantity) ? (totalVotes / quantity) : 0\n\t\tif (quantity && quantity >= days) {\n\t\t\tscores = Math.round(totalVotes / quantity * 10) / 10\n\n\t\t\tarrayUsersWithLinks.push({ \n\t\t\t\tusername,\n\t\t\t\ttotalVotes,\n\t\t\t\tquantity,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя оценка за каждую оставленную новость: ${scores}`\n\t\t\t})\n\t\t}\n\t}\n\n\treturn arrayUsersWithLinks\n}\n\n// function createArrayUsersWithoutLinkInComments() {\n// \tlet arrayUsersWithoutLinks = [], scores = 0\n\n// \tfor (let username in commentsByUsers) {\n// \t\tlet quantity = 0\n// \t\tcommentsByUsers[username].forEach(comment => {\n// \t\t\tif (!commentIsNews(comment)) quantity++\n// \t\t})\n\n// \t\tif (quantity) {\n// \t\t\tscores = Math.round(quantity / days * 10) / 10\n\n// \t\t\tarrayUsersWithoutLinks.push({ \n// \t\t\t\tusername,\n// \t\t\t\tquantity,\n// \t\t\t\tdays,\n// \t\t\t\tscores\n// \t\t\t})\n// \t\t}\n// \t}\n\n// \treturn arrayUsersWithoutLinks\n// }\n\nfunction createArrayUsersByAverageLengthMessages() {\n\tlet array = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet summ = 0, messages = commentsByUsers[username]\n\n\t\tmessages.forEach(comment => { \n\t\t\tif (comment.message) summ += comment.message.length\n\t\t}) \n\n\t\tscores = Math.round(summ / messages.length * 10) / 10\n\n\t\tif (username !== 'undefined' && messages.length >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername,\n\t\t\t\ttotalLength: summ,\n\t\t\t\tquantity: messages.length,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя длина оставленных сообщений: ${scores}`\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST MEMBER\n*/\n\nfunction getMembersRating() {\n\tlet scores = 0, members = {}, // { username: scores }\n\t\tratings = [ \n\t\t\tRATINGS.mostActiveMembers, \n\t\t\t// RATINGS.mostPopularMembers, \n\t\t\tRATINGS.mostValuableMembers \n\t\t]\n\n\t/*\n\t\tconcat ratings \n\t\tscore = summ (place in the ranking / length of ranking) (%)\n\t*/\n\tratings.forEach(rating => {\n\t\trating.forEach((user, i) => {\n\t\t\tscores = (rating.length - i) / rating.length * 100 / ratings.length\n\n\t\t\tif (!members[user.username]) members[user.username] = scores\n\t\t\telse members[user.username] += scores\n\t\t})\n\t})\n\n\treturn members\n}\n\nfunction sortUsersByScores() {\n\tlet membersObj = getMembersRating(), arrayMembers = [], scores = 0\n\n\tfor (let username in membersObj) {\n\t\tscores = Math.round(membersObj[username] * 10) / 10\n\n\t\tarrayMembers.push({ \n\t\t\tusername, \n\t\t\tscores,\n\t\t\tdescription: `Лучший показатель активность + полезность: ${scores}%`\n\t\t})\n\t}\n\n\tarrayMembers.sort((a, b) => b.scores - a.scores )\n\n\treturn arrayMembers\t\n}\n\n/*===========================================================\n\tMOST POPULAR MEMBER\n\tscores = total votes of member / days\n*/\n\nfunction sortUsersByVotes() {\n\tlet array = createArrayUsersByCommentsVotes()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tMOST POPULAR COMMENT\n\tscores = comment with max vote\n*/\n\nfunction sortComments(comments) {\n\taddDescriptionMessage(comments)\n\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\treturn sortedComments\n}\n\n/*===========================================================\n\tMOST ACTIVE MEMBER\n\tscores = quantity of comments / days\n*/\n\nfunction sortUsersByTotalComments() {\n\tlet array = createArrayUsersByCommentsQuantities()\n\t// let array = createArrayUsersWithoutLinkInComments()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*==========================================================\n\tMOST VALUABLE MEMBER\n\tscores = total votes of member / quantity of comments\n*/\n\nfunction sortUsersByAverageVote() {\n\tlet array = [], quantity = 0, votes = 0, scores = 0,\n\t\t{ mostPopularMembers } = RATINGS\n\n\tmostPopularMembers.forEach(member => {\n\t\tvotes = member.totalVotes\n\t\tquantity = commentsByUsers[member.username].length\n\t\tscores = Math.round(votes / quantity * 10) / 10\n\n\t\tif (quantity >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername: member.username,\n\t\t\t\tvotes,\n\t\t\t\tquantity,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Лучшая средняя оценка за оставленные комментарии: ${scores}`\n\t\t\t})\t\t\t\n\t\t}\n\n\t})\n\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST NEWS BOT\n\tscores = max total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n\n\tWORST NEWS BOT\n\tscores = min total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByCommentsWithLinks() {\n\tlet arrayBest = createArrayUsersWithLinkInComments(days),\n\t\tarrayWorst = [].concat(arrayBest),\n\t\tresult = {}\n\n\tarrayBest.sort((a, b) => b.scores - a.scores )\n\tarrayWorst.sort((a, b) => a.scores - b.scores )\n\n\tresult.best = arrayBest\n\tresult.worst = arrayWorst\n\n\treturn result\n}\n\n/*===========================================================\n\tMR. SHORT\n\tscores = min total length of message / quantity of message\n\t(quantity must be more than \"days\")\n\n\tMR. LONG TONGUE\n\tscores = max total length of message / quantity of message\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByMessagesLength() {\n\tlet arrayShort = createArrayUsersByAverageLengthMessages(days),\n\t\tarrayLong = [].concat(arrayShort),\n\t\tresult = {}\n\n\tarrayShort.sort((a, b) => a.scores - b.scores)\n\tarrayLong.sort((a, b) => b.scores - a.scores)\n\n\tresult.short = arrayShort\n\tresult.long = arrayLong\n\n\treturn result\n}\n\n/*===========================================================\n\tMOST POPULAR NEWS\n\tscores = max total votes in comment with link\n*/\n\nfunction sortMessagesWithLinksByVotes(comments) {\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\tlet commentsWithLinks = sortedComments\n\t\t.filter(comment => {\n\t\t\tif (comment.message) return comment.message.indexOf('http') >= 0 \n\t\t})\n\n\treturn commentsWithLinks\n}\n\n/*===========================================================\n\tMOST POPULAR WORD\n\tscores = max popular word in comments / days\n*/\n\nfunction sortWordsInMessages(comments) {\n\tlet array = [], scores = 0, wordsObj = createWordsObj(comments)\n\n\tfor (let word in wordsObj) {\n\t\tscores = Math.round(wordsObj[word] / days * 10) / 10\n\n\t\tif (scores > 1) {\n\t\t\tarray.push({\n\t\t\t\tword,\n\t\t\t\tquantity: wordsObj[word],\n\t\t\t\tdays,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\tarray.sort((a, b) => b.scores - a.scores)\n\n\treturn array\n}\n\nfunction createWordsObj(comments) {\n\tlet wordsObj = {}, wordScores = 0\n\n\tcomments.forEach(comment => {\n\t\tlet arrayMessage = createArrayWordsFromCommentMessage(comment)\n\n\t\tarrayMessage.forEach(word => {\n\t\t\twordScores = wordsObj[word] ? wordsObj[word] + 1 : 1\n\t\t\twordsObj[word] = wordScores\n\t\t})\n\t})\n\treturn wordsObj\n}\n\nfunction createArrayWordsFromCommentMessage(comment) {\n\tlet message = comment.message \n\t\t? comment.message.toLowerCase()\n\t\t\t.replace(/[.,?!()-=*1234567890]/g, '')\n\t\t: ''\n\n\treturn message.split(' ').filter(word => word.length > 3)\n}\n\n/*===========================================================\n\tMR.WHY + MR.EXCLAMATION + MR.SMILE\n\tscores = max quantity marks in comments / days\n*/\n\nfunction sortUsersByMarks() {\n\tlet questions = [], exclamations = [], smiles = [], comments = [], scores = 0\n\n\tObject.keys(commentsByUsers).forEach(username => {\n\t\tcomments = commentsByUsers[username]\n\n\t\tif (comments.length > days) {\n\t\t\tscores = countMarkInCommentsArray(comments, '?')\n\t\t\tif (scores) questions.push({ \n\t\t\t\tusername, \n\t\t\t\tscores,\n\t\t\t\tdescription: `Задает вопрос в каждом из ${scores} сообщений`\n\t\t\t})\n\n\t\t\tscores = countMarkInCommentsArray(comments, '!')\n\t\t\tif (scores) exclamations.push({ \n\t\t\t\tusername, \n\t\t\t\tscores,\n\t\t\t\tdescription: `Восклицает в каждом из ${scores} сообщений`\n\t\t\t})\n\n\t\t\tscores = countMarkInCommentsArray(comments, ':)')\n\t\t\tscores += countMarkInCommentsArray(comments, ';)')\n\t\t\tif (scores) smiles.push({ \n\t\t\t\tusername, \n\t\t\t\tscores,\n\t\t\t\tdescription: `Шутит в каждом из ${scores} сообщений`\n\t\t\t})\n\t\t}\n\t})\n\n\tquestions.sort((a, b) => a.scores - b.scores)\n\texclamations.sort((a, b) => a.scores - b.scores)\n\tsmiles.sort((a, b) => a.scores - b.scores)\n\n\treturn { questions, exclamations, smiles }\n}\n\nfunction countMarkInCommentsArray(commentsArray, mark) {\n\tlet count = 0, temp = []\n\n\tcommentsArray.forEach(comment => {\n\t\tif (comment.message) {\n\t\t\ttemp = comment.message.split(mark) || []\n\t\t\tif (temp.length) count += temp.length - 1\n\t\t}\n\t})\n\n\treturn Math.round((commentsArray.length / count) * 10) / 10\n}\n\n/*===========================================================\n\tMOST POPULAR JOKE\n\tscores = max votes with comment includes smiles\n*/\n\n\nfunction sortMessagesWithSmiles(comments) {\n\tlet commentsWithSmiles = comments.filter(comment => {\n\t\tif (comment.message \n\t\t\t&& (comment.message.includes(':)') || comment.message.includes(';)'))) \n\t\t\t\treturn comment\n\t})\n\n\tcommentsWithSmiles.sort((a, b) => b.scores - a.scores)\n\n\treturn commentsWithSmiles\n}","import React, { Component } from 'react'\nimport RatingItem from './RatingItem'\nimport DropdownPeriod from './DropdownPeriod'\nimport './Ratings.css'\n\nimport { createUsersObj } from './utils/UsersUtil'\nimport { createRatingsObj } from './utils/RatingsUtil'\nimport { createWinnersObj } from './utils/WinnersUtil'\n\nclass Ratings extends Component {\n\t// shouldComponentUpdate(nextProps) {\n\t// \tconsole.log(nextProps.month !== this.props.month)\n\t// \treturn nextProps.month !== this.props.month\n\t// }\n\n  \trender() {\n  \t\tconst { data, month, openRating, changePeriod } = this.props,\n  \t\t\t{ users, ratings, winners } = this._getDataObjects()\t\t\n\n\t\treturn (\n\t  \t\t<div className=\"Ratings\">\n\t\t\t\t<section>\n\t\t  \t\t{\n\t\t  \t\t\tusers&& ratings && winners ? \n\t\t  \t\t\t\t<div>\n\t\t  \t\t\t\t\t<DropdownPeriod month={ month } openPeriod={ changePeriod } />\n\t\t  \t\t\t\t\t<p>\n\t\t  \t\t\t\t\t\t<span>All members: { Object.keys(users).length }</span><br />\n\t\t  \t\t\t\t\t\t<span>All comments: { data.length }</span><br />\n\t\t  \t\t\t\t\t</p>\n\t\t  \t\t\t\t{\n\t\t  \t\t\t\t\tObject.keys(winners).map((name, i) => \t\n\t\t  \t\t\t\t\t\t<RatingItem key={i}\n\t\t  \t\t\t\t\t\t\tname={ name }\n\t\t  \t\t\t\t\t\t\trating={ ratings[name] }\n\t\t  \t\t\t\t\t\t\twinners={ winners[name] }\n\t\t  \t\t\t\t\t\t\topenRating={ openRating }\n\t\t  \t\t\t\t\t\t/>\t  \t\t\t\t\t\n\t\t  \t\t\t\t\t)\n\t\t  \t\t\t\t}\n\t\t  \t\t\t\t</div>\n\t\t  \t\t\t: 'Parsing data.....'\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\t// jsonUsers\n\t\t  \t\t}\n\t\t\t\t</section>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_getDataObjects() {\n  \t\tlet users, ratings, winners\n\n  \t\tconst { data, month } = this.props,\n  \t\t\tdaysInMonth = new Date(2018, month, 0).getDate()\n\n  \t\tif (data && data.length) {\n  \t\t\tusers = createUsersObj(data)\n  \t\t\tratings = createRatingsObj(data, users, daysInMonth)\n  \t\t\twinners = createWinnersObj(ratings)\n  \t\t}\n  \t\treturn { users, ratings, winners }\n  \t}\n}\n\nexport default Ratings\n","export function createWinnersObj(RATINGS) {\n\tlet WINNERS = {}, maxScores = 0\n\n\tObject.keys(RATINGS).forEach(name => {\n\t\tmaxScores = RATINGS[name][0].scores\n\t\t\n\t\tWINNERS[name] = RATINGS[name].filter(member => member.scores === maxScores)\t\t\n\t})\n\n\treturn WINNERS\n}","import React, { Component } from 'react'\nimport './Overlay.css'\n\nclass Overlay extends Component {\n  \trender() {\n\n  \t\tconst { content, opening, close } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"Overlay\" style={{ width: opening ? '100%' : '0%' }}>\n\t\t\t  \t<button className=\"closebtn\" onClick={ () => close() }>&times;</button>\n\n\t\t\t  \t<div className=\"overlay-content\">\n\t\t\t  \tТоп 10 позиций рейтинга:\n\t\t\t  \t{\n\t\t\t  \t\tcontent.slice(0, 10).map((rate, i) => \n\t\t\t  \t\t\t<p key={i}>{i+1}. {rate.username}, score: {rate.scores}</p>\n\t\t\t  \t\t)\n\t\t\t  \t}\n\t\t\t  \t</div>\n\t\t\t</div>\n\t  \t)\n  \t}\n}\n\nexport default Overlay\n","import { Parser } from 'htmlparser2'\n\nexport function parseDataToArray(data) {\n    let array = []\n\n    data = getFullComments(data)\n    array = parseFullComments(data)\n    array = concatArray(array)\n    array = createCommentsArray(array)\n\n    return array\n}\n\nexport function getFullComments(data) {\n        const startMarker = '<div id=\"commentFullList\">',\n            finishMarker = '<div class=\"for-set-comment\">',\n\n            startIndex = data.indexOf(startMarker),\n            finishIndex = data.indexOf(finishMarker)\n\n        return data.substring(startIndex, finishIndex)\n    }\n\nexport function parseFullComments(data) {\n        let arrayText = []\n\n        let parser = new Parser({\n            ontext: (text) => {\n                text = text.trim()\n\n                if ((text.length === 1 && text === '0') ||\n                    (text.length > 1 && text !== 'удаленный комментарий')) {\n\n                    arrayText.push(text)\n                }\n            }\n        }, { decodeEntities: true })\n        \n        parser.write(data)\n        parser.end()\n\n        return arrayText\n    }\n\nexport function concatArray(array) {\n        let i = 0, temp = [], result = []\n\n        while(i < array.length) {\n            if (isScore(array[i])) {\n                if (temp.length > 3) temp = concatMessage(temp)\n                if (temp.length > 0) result.push(temp)\n\n                temp = []\n            }\n            temp.push(array[i++])\n        }\n        return result\n    }\n\nfunction isScore(text) {\n    return (text.startsWith('+') && parseInt(text)) || text === '0'\n}\n\nfunction concatMessage(array) {\n    let i = 3, message = ''\n\n    while (i < array.length) {\n        message += (\" \" + array[i++])\n    }\n    array[3] = message.trim()\n\n    return array.slice(0, 4)\n}\n\nexport function createCommentsArray(array) {\n    let comments = [], i = 0\n\n    while(i < array.length ) {\n        let row = array[i++], comment = {}\n\n        comment.scores = parseInt(row[0])   //comment vote\n        comment.username = row[1]           //comment username\n        comment.date = row[2]               //comment date\n        comment.message = row[3]            //comment message\n\n        if (comment && Object.keys(comment).length === 4\n                && comment.username\n                && comment.username !== 'undefined' \n                && comment.username.length) {\n\n            comments.push(comment)\n        }\n    }\n    return comments\n}\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport TopNav from './TopNav'\nimport Ratings from './Ratings'\nimport Overlay from './Overlay'\nimport './App.css'\n\nimport { parseDataToArray } from './utils/ParseUtil'\n\nconst DEFAULT_MONTH = 10\n// \tdaysInMonth = new Date(2018, MONTH, 0).getDate()\n\n// let localData = require('./resources/comments_' + (MONTH > 9 ? MONTH : '0' + MONTH) + '.json')\n// let localData = null\n\n// import jsonfile from 'jsonfile'\n\n\nclass App extends Component {\n  \tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tmonth: DEFAULT_MONTH, \n\t\t\tlocalData: null,\n\t\t\tloadedData: null,\n\t\t\tactiveRating: [],\n\t\t\topeningOverlay: false\n\t\t}\n  \t}\n\n  \tcomponentWillMount() {\n  \t\tthis._setData(DEFAULT_MONTH)\n  \t}\n\n  \thandleOpenRating(rating) {\n  \t\tthis.setState({ \n  \t\t\tactiveRating: rating,\n  \t\t\topeningOverlay: true\n  \t\t})\n  \t}\n\n  \thandleCloseOverlay() {\n  \t\tthis.setState({ openingOverlay: false })\n  \t}\n\n  \thandleChangePeriod(month) {\n  \t\tif (this.state.month !== month)\tthis._setData(month)\n  \t}\n\n  \trender() {\n\n  \t\tconst { month, localData, loadedData, activeRating, openingOverlay } = this.state,\n  \t\t\tdaysInMonth = new Date(2018, month, 0).getDate()\n\n\t\treturn (\n\t  \t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<TopNav />\n\n\t\t\t\t{ \n\t\t\t\t\tlocalData \n\t\t\t\t\t\t? \t<Ratings \n\t\t\t\t\t\t\t\tdata={ localData } \n\t\t\t\t\t\t\t\tmonth={ month } \n\t\t\t\t\t\t\t\tchangePeriod={ this.handleChangePeriod.bind(this) }\n\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) } \n\t\t\t\t\t\t\t/> \n\n\t\t\t\t\t\t: !localData && loadedData.length === daysInMonth\n\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<Ratings \n\t\t\t\t\t\t\t\t\tdata={ [].concat(...loadedData) } \n\t\t\t\t\t\t\t\t\tmonth={ month } \n\t\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) }\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Loading data.......' \n\t\t\t\t}\n\n\t\t\t\t<Overlay \n\t\t\t\t\tcontent={ activeRating } \n\t\t\t\t\topening={ openingOverlay } \n\t\t\t\t\tclose={ this.handleCloseOverlay.bind(this) } \n\t\t\t\t/>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_setData(month) {\n  \t\tlet localData = require('./resources/comments_' + (month > 9 ? month : '0' + month) + '.json')\n\n  \t\tif (localData) {\n  \t\t\tconsole.log('success load local data from', month, 'month with', localData.length, 'comments')\n\n  \t\t\tthis.setState({ month, localData })\n\n  \t\t} else {\n\t  \t\tconsole.log('no local data! load from url...')\n\n  \t\t\tlet date = new Date(2018, month - 1, 1), \n  \t\t\t\tdaysInMonth = new Date(2018, month, 0).getDate(), \n  \t\t\t\turl = ''\n\n  \t\t\tfor (let i = 0; i < daysInMonth; i++) {\n\t\t\t\turl = 'https://minfin.com.ua/' + this._formatDate(date) + '/currency/'\n\t\t\t\tthis._loadData(url)\t\t\n\t\t\t\tdate.setDate(date.getDate() + 1)\n\t\t\t}\n  \t\t}\n  \t}\n\n  \t_loadData(url) {\n\t\tfetch(\"https://cors.io/?\" + url)\n\t  \t\t.then(response => {\n\t\t  \t\tconsole.log(url + \" -> \" + response.ok);\n\t\t  \t\tif(response.ok) {\n\t\t\t\t\treturn response.text()\n\t\t  \t\t} else {\n\t\t\t\t\t// throw new Error(\"Can't get data from \" + url)\n\t\t  \t\t}         \n\t  \t\t})\n\t  \t\t.then(page => {\n\t\t  \t\tlet newData = page ? parseDataToArray(page) : [],\n\t\t  \t\t\t{ loadedData } = this.state\n\n\t\t  \t\tloadedData.push(newData)\n\t\t  \t\tthis.setState({ loadedData })\n\n\t\t  \t\t// this._writeJsonFile(data)\n\t  \t\t})\n\t  \t\t.catch(err => {\n\t\t\t\tconsole.log(\"failed to load \", url, err.message)\n\t  \t\t})\n  \t}\n\n  \t_formatDate(date) {\n\t\tlet year = date.getFullYear(),\n\t\t\tmonth = date.getMonth() + 1,\n\t\t\tday = date.getDate()\n\n\t\tif (day < 10) {\n\t\t  day = '0' + day;\n\t\t}\n\t\tif (month < 10) {\n\t\t  month = '0' + month;\n\t\t}\n\n\t\treturn (year + '/' + month + '/' + day)\n  \t}\n\n  \t// \t_writeJsonFile(data) {\n\t// \t\tconst file = '../tmp/data.json'\n \n\t// \t\tjsonfile.writeFile(file, JSON.stringify(data))\n  \t// \t\t\t.then(res => {\n  \t//   \t\t\tconsole.log('Write complete')\n  \t// \t\t\t})\n  \t// \t\t\t.catch(error => console.error(error))\t\n  \t// \t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}