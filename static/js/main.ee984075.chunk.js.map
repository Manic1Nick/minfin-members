{"version":3,"sources":["resources sync /^/.//comments_.*/.json$","Header.js","TopNav.js","RatingItem.js","utils/UsersUtil.js","utils/RatingsUtil.js","Ratings.js","utils/WinnersUtil.js","Overlay.js","utils/ParseUtil.js","App.js","serviceWorker.js","index.js"],"names":["map","./comments_01.json","./comments_02.json","./comments_03.json","./comments_04.json","./comments_05.json","./comments_06.json","./comments_07.json","./comments_08.json","./comments_09.json","./comments_10.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Header","react_default","a","createElement","className","Component","TopNav","alert","_this","this","href","onClick","openRules","type","placeholder","NAMES_RUS","bestMembers","mostValuableMembers","mostPopularComments","mostPopularMembers","mostActiveMembers","bestNewsBots","worstNewsBots","mrShort","mrLong","mostPopularNews","mostPopularWord","RatingItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","props","name","ratings","winners","openRating","username","description","createUsersObj","data","comments","user","temp","commentsByUsers","forEach","comment","toConsumableArray","concat","createObjCommentsByUsers","RATINGS","days","createRatingsObj","usersObj","daysInMonth","array","arrayUsersVotes","scores","totalVotes","commentIsNews","vote","Math","round","push","createArrayUsersByCommentsVotes","sort","b","sortUsersByVotes","sortCommentsByVotes","sortComments","arrayUsersQuantities","length","quantity","createArrayUsersByCommentsQuantities","sortUsersByTotalComments","votes","member","sortUsersByAverageVote","membersObj","members","addScore","userScores","i","getMembersRating","arrayMembers","maxScores","sortUsersByScores","sortUsersByCommentsWithLinks","best","worst","sortUsersByMessagesLength","short","long","filter","message","indexOf","sortMessagesWithLinksByVotes","wordsObj","wordScores","toLowerCase","replace","split","word","createArrayWordsFromCommentMessage","createWordsObj","sortWordsInMessages","substring","arrayBest","arrayUsersWithLinks","_loop","createArrayUsersWithLinkInComments","arrayWorst","result","arrayShort","summ","messages","totalLength","createArrayUsersByAverageLengthMessages","arrayLong","Ratings","users","_createDataObjects","_this$state","month","JSON","stringify","src_RatingItem_0","key","_this$props2","Date","getDate","WINNERS","createWinnersObj","setState","Overlay","content","opening","nextProps","_this2","style","width","handleClose","slice","rate","parseDataToArray","row","parseInt","date","createCommentsArray","text","startsWith","concatMessage","concatArray","arrayText","parser","Parser","ontext","trim","decodeEntities","write","end","parseFullComments","startIndex","finishIndex","getFullComments","localData","require","App","activeRating","openingOverlay","_setData","rating","_ref","src_Header_0","src_TopNav_0","src_Ratings_0","handleOpenRating","bind","apply","src_Overlay_0","console","log","url","_formatDate","_loadData","setDate","fetch","then","response","ok","page","newData","catch","err","year","getFullYear","getMonth","day","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sRAAA,IAAAA,EAAA,CACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,GACAC,qBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAb,EAAAY,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAnB,IAEAW,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,69j6qDCjBeW,0LAVb,OACCC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACfH,EAAAC,EAAAC,cAAA,SACDF,EAAAC,EAAAC,cAAA,sBAAmBF,EAAAC,EAAAC,cAAA,gCALHE,cCgBNC,6LAbbC,MAAM,0CAGI,IAAAC,EAAAC,KACV,OACCR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZH,EAAAC,EAAAC,cAAA,KAAGO,KAAK,SAASC,QAAU,kBAAMH,EAAKI,cAAtC,cACAX,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOC,YAAY,+BAVhBT,cCAfU,SAAY,CACjBC,YAAgB,oGAChBC,oBAAsB,mIACtBC,oBAAsB,0GACtBC,mBAAqB,qJACrBC,kBAAqB,2JACrBC,aAAiB,+IACjBC,cAAkB,+IAClBC,QAAa,8FACbC,OAAY,2GACZC,gBAAmB,yIACnBC,gBAAmB,+HA6BLC,cAzBd,SAAAA,IAAc,IAAAnB,EAAA,OAAAZ,OAAAgC,EAAA,EAAAhC,CAAAa,KAAAkB,IACbnB,EAAAZ,OAAAiC,EAAA,EAAAjC,CAAAa,KAAAb,OAAAkC,EAAA,EAAAlC,CAAA+B,GAAAI,KAAAtB,QACKuB,MAAQ,GAFAxB,qHASH,IAAAyB,EACqCxB,KAAKyB,MAA5CC,EADEF,EACFE,KAAMC,EADJH,EACIG,QAASC,EADbJ,EACaI,QAASC,EADtBL,EACsBK,WAEhC,OACCrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAUW,EAAUoB,IAEnClC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASO,QAAU,kBAAM2B,EAAWF,EAAQD,MACxDlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAgBiC,EAAQF,GAAM,GAAGI,UAChDtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAkBiC,EAAQF,GAAM,GAAGK,sBAnBhCnC,mBCjBlB,SAASoC,EAAeC,GAG9B,OAGD,SAAkCC,GACjC,IAAIC,EAAO,GAAIC,EAAO,GAAIC,EAAkB,GAQ5C,OANAH,EAASI,QAAQ,SAAAC,GAChBJ,EAAOI,EAAQT,SACfM,EAAOC,EAAgBF,IAAS,GAChCE,EAAgBF,GAAhBhD,OAAAqD,EAAA,EAAArD,CAA6BiD,GAA7BK,OAAA,CAAmCF,MAG7BF,EAdeK,CAAyBT,GCDhD,IAAMU,EAAU,CACfpC,YAAa,GACbC,oBAAqB,GACrBC,oBAAqB,GACrBC,mBAAoB,GACpBC,kBAAmB,GACnBC,aAAc,GACdC,cAAe,GACfC,QAAS,GACTC,OAAQ,GACRC,gBAAiB,GACjBC,gBAAiB,IAGdoB,EAAkB,GACrBO,EAAO,GAED,SAASC,EAAiBX,EAAUY,EAAUC,GA6BpD,OA3BAV,EAAkBS,EAClBF,EAAOG,EAEPJ,EAAQjC,mBAgOT,WACC,IAAIsC,EAlKL,WACC,IAAIC,EAAkB,GAAIC,EAAS,EAEnC,IAAK,IAAIpB,KAAYO,EAAiB,CACrC,IAAIc,EAAa,EACjBd,EAAgBP,GAAUQ,QAAQ,SAAAC,GAE5Ba,EAAcb,KAAUY,GAAcZ,EAAQc,QAGpDH,EAASI,KAAKC,MAAMJ,EAAaP,EAAO,IAAM,GAE9CK,EAAgBO,KAAK,CACpB1B,WACAqB,aACAP,OACAM,WAIF,OAAOD,EA8IKQ,GAGZ,OAFAT,EAAMU,KAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAET,OAASzD,EAAEyD,SAE3BF,EApOuBY,GAC9BjB,EAAQlC,oBA2OT,SAAsByB,GAGrB,OAFqB2B,EAAoB3B,GA5OV4B,CAAa5B,GAC5CS,EAAQhC,kBAqPT,WACC,IAAIqC,EA3ML,WACC,IAAIe,EAAuB,GAAIb,EAAS,EAExC,IAAK,IAAIpB,KAAYO,EACpBa,EAASI,KAAKC,MAAMlB,EAAgBP,GAAUkC,OAASpB,EAAO,IAAM,GAEpEmB,EAAqBP,KAAK,CACzB1B,WACAmC,SAAU5B,EAAgBP,GAAUkC,OACpCpB,OACAM,SACAnB,YAAW,qNAAAU,OAA6CS,KAI1D,OAAOa,EA4LKG,GAIZ,OAFAlB,EAAMU,KAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAET,OAASzD,EAAEyD,SAE3BF,EA1PsBmB,GAC7BxB,EAAQnC,oBAiQT,WACC,IAAIwC,EAAQ,GAAIiB,EAAW,EAAGG,EAAQ,EAAGlB,EAAS,EAqBlD,OAnBAP,EAAQjC,mBAAmB4B,QAAQ,SAAA+B,GAClCD,EAAQC,EAAOlB,WACfc,EAAW5B,EAAgBgC,EAAOvC,UAAUkC,OAC5Cd,EAASI,KAAKC,MAAMa,EAAQH,EAAW,IAAM,GAEzCA,GAAYrB,GACfI,EAAMQ,KAAK,CACV1B,SAAUuC,EAAOvC,SACjBsC,QACAH,WACAf,SACAnB,YAAW,4QAAAU,OAAuDS,OAMrEF,EAAMU,KAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAET,OAASzD,EAAEyD,SAE3BF,EAvRwBsB,GAC/B3B,EAAQpC,YAoMT,WACC,IAAIgE,EAhCL,WACC,IAAIrB,EAAS,EAAGsB,EAAU,GAE1B,SAASC,EAAS3C,EAAU4C,GACtBF,EAAQ1C,GACR0C,EAAQ1C,IAAa4C,EADFF,EAAQ1C,GAAY4C,EAwB7C,OAVA/B,EAAQhC,kBAAkB2B,QAAQ,SAACH,EAAMwC,GACxCzB,EAASP,EAAQhC,kBAAkBqD,OAASW,EAC5CF,EAAStC,EAAKL,SAAUoB,KAGzBP,EAAQnC,oBAAoB8B,QAAQ,SAACH,EAAMwC,GAC1CzB,EAASP,EAAQnC,oBAAoBwD,OAASW,EAC9CF,EAAStC,EAAKL,SAAUoB,KAGlBsB,EAIUI,GAAoBC,EAAe,GAAI3B,EAAS,EAChE4B,EAAYnC,EAAQhC,kBAAkBqD,OAASrB,EAAQnC,oBAAoBwD,OAE5E,IAAK,IAAIlC,KAAYyC,EACpBrB,EAASI,KAAKC,MAAMgB,EAAWzC,GAAYgD,EAAY,KAAQ,GAE/DD,EAAarB,KAAK,CACjB1B,WACAoB,SACAnB,YAAW,kOAAAU,OAAgDS,EAAhD,OAMb,OAFA2B,EAAanB,KAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAET,OAASzD,EAAEyD,SAElC2B,EApNkBE,GACzBpC,EAAQ/B,aAAiBoE,IAA+BC,KACxDtC,EAAQ9B,cAAkBmE,IAA+BE,MACzDvC,EAAQ7B,QAAcqE,IAA4BC,MAClDzC,EAAQ5B,OAAaoE,IAA4BE,KACjD1C,EAAQ3B,gBAyUT,SAAsCkB,GAQrC,OAPqB2B,EAAoB3B,GAGvCoD,OAAO,SAAA/C,GACP,GAAIA,EAAQgD,QAAS,OAAOhD,EAAQgD,QAAQC,QAAQ,SAAW,IA9UrCC,CAA6BvD,GACzDS,EAAQ1B,gBAwVT,SAA6BiB,GAC5B,IAAIc,EAAQ,GAAIE,EAAS,EAAGwC,EAmB7B,SAAwBxD,GACvB,IAAIwD,EAAW,GAAIC,EAAa,EAUhC,OARAzD,EAASI,QAAQ,SAAAC,IAWlB,SAA4CA,GAM3C,OALcA,EAAQgD,QACnBhD,EAAQgD,QAAQK,cAChBC,QAAQ,yBAA0B,IAClC,IAEYC,MAAM,KAAKR,OAAO,SAAAS,GAAI,OAAIA,EAAK/B,OAAS,KAhBnCgC,CAAmCzD,GAEzCD,QAAQ,SAAAyD,GACpBJ,EAAaD,EAASK,GAAQL,EAASK,GAAQ,EAAI,EACnDL,EAASK,GAAQJ,MAGZD,EA9BgCO,CAAe/D,GAEtD,IAAK,IAAI6D,KAAQL,GAChBxC,EAASI,KAAKC,MAAMmC,EAASK,GAAQnD,EAAO,IAAM,IAErC,GACZI,EAAMQ,KAAK,CACVuC,OACA9B,SAAUyB,EAASK,GACnBnD,OACAM,WAMH,OAFAF,EAAMU,KAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAET,OAASzD,EAAEyD,SAE3BF,EAzWqBkD,CAAoBhE,GAczCS,EAMR,SAASkB,EAAoB3B,GAC5B,OAAOA,EAASwB,KAAK,SAACjE,EAAGkE,GAMxB,OALAlE,EAAEyD,OAASzD,EAAE4D,KACb5D,EAAEsC,YAAF,YAAAU,OACIhD,EAAE8F,QAAU9F,EAAE8F,QAAQY,UAAU,EAAG,KAAO,GAD9C,yHAAA1D,OAEuBhD,EAAEyD,OAFzB,UAIOS,EAAEN,KAAO5D,EAAE4D,OAIpB,SAASD,EAAcb,GACtB,OAAOA,EAAQgD,SAAWhD,EAAQgD,QAAQC,QAAQ,SAAW,EA6P9D,SAASR,IACR,IAAIoB,EAlNL,WACC,IAAIC,EAAsB,GAAInD,EAAS,EADMoD,EAAA,SAGpCxE,GACR,IAAImC,EAAW,EAAGd,EAAa,EAC/Bd,EAAgBP,GAAUQ,QAAQ,SAAAC,GAC7Ba,EAAcb,KACjB0B,IACAd,GAAcZ,EAAQc,QAKpBY,GAAYA,GAAYrB,IAC3BM,EAASI,KAAKC,MAAMJ,EAAac,EAAW,IAAM,GAElDoC,EAAoB7C,KAAK,CACxB1B,WACAqB,aACAc,WACAf,SACAnB,YAAW,oPAAAU,OAAmDS,OAlBjE,IAAK,IAAIpB,KAAYO,EAAiBiE,EAA7BxE,GAuBT,OAAOuE,EAwLSE,GACfC,EAAa,GAAG/D,OAAO2D,GACvBK,EAAS,GAQV,OANAL,EAAU1C,KAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAET,OAASzD,EAAEyD,SACtCsD,EAAW9C,KAAK,SAACjE,EAAGkE,GAAJ,OAAUlE,EAAEyD,OAASS,EAAET,SAEvCuD,EAAOxB,KAAOmB,EACdK,EAAOvB,MAAQsB,EAERC,EAaR,SAAStB,IACR,IAAIuB,EArLL,WACC,IAAI1D,EAAQ,GAAIE,EAAS,EAEzB,IAAK,IAAIpB,KAAYO,EAAiB,CACrC,IAAIsE,EAAO,EAAGC,EAAWvE,EAAgBP,GAEzC8E,EAAStE,QAAQ,SAAAC,GACZA,EAAQgD,UAASoB,GAAQpE,EAAQgD,QAAQvB,UAG9Cd,EAASI,KAAKC,MAAMoD,EAAOC,EAAS5C,OAAS,IAAM,GAElC,cAAblC,GAA4B8E,EAAS5C,QAAUpB,GAClDI,EAAMQ,KAAK,CACV1B,WACA+E,YAAaF,EACb1C,SAAU2C,EAAS5C,OACnBd,SACAnB,YAAW,wMAAAU,OAA0CS,KAKxD,OAAOF,EA8JU8D,GAChBC,EAAY,GAAGtE,OAAOiE,GACtBD,EAAS,GAQV,OANAC,EAAWhD,KAAK,SAACjE,EAAGkE,GAAJ,OAAUlE,EAAEyD,OAASS,EAAET,SACvC6D,EAAUrD,KAAK,SAACjE,EAAGkE,GAAJ,OAAUA,EAAET,OAASzD,EAAEyD,SAEtCuD,EAAOrB,MAAQsB,EACfD,EAAOpB,KAAO0B,EAEPN,MCnQOO,cApFd,SAAAA,IAAc,IAAAjH,EAAA,OAAAZ,OAAAgC,EAAA,EAAAhC,CAAAa,KAAAgH,IACbjH,EAAAZ,OAAAiC,EAAA,EAAAjC,CAAAa,KAAAb,OAAAkC,EAAA,EAAAlC,CAAA6H,GAAA1F,KAAAtB,QACKuB,MAAQ,CACZ0F,MAAO,GACPtF,QAAS,GACTC,QAAS,IALG7B,mFAUXC,KAAKkH,sDAGG,IAAAC,EAC0BnH,KAAKuB,MAAjC0F,EADEE,EACFF,MAAOtF,EADLwF,EACKxF,QAASC,EADduF,EACcvF,QADdJ,EAG4BxB,KAAKyB,MAAjCQ,EAHAT,EAGAS,KAAMmF,EAHN5F,EAGM4F,MAAOvF,EAHbL,EAGaK,WACTwF,KAAKC,UAAUrF,GAE7B,OACGzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAChBH,EAAAC,EAAAC,cAAA,eAmBGuH,GAAStF,GAAWC,EACnBpC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,mBAAY0H,GACZ5H,EAAAC,EAAAC,cAAA,SACCF,EAAAC,EAAAC,cAAA,4BAAqBP,OAAOD,KAAK+H,GAAOjD,QAAexE,EAAAC,EAAAC,cAAA,WACvDF,EAAAC,EAAAC,cAAA,6BAAsBuC,EAAK+B,QAAexE,EAAAC,EAAAC,cAAA,YAG3CP,OAAOD,KAAK0C,GAAS7D,IAAI,SAAC2D,EAAMiD,GAAP,OACxBnF,EAAAC,EAAAC,cAAC6H,EAAD,CAAYC,IAAK7C,EAChBjD,KAAOA,EACPC,QAAUA,EACVC,QAAUA,EACVC,WAAaA,OAKf,mEAWL,IAAIoF,EAAOtF,EAASC,EADA6F,EAGIzH,KAAKyB,MAArBQ,EAHYwF,EAGZxF,KAAMmF,EAHMK,EAGNL,MACbrE,EAAc,IAAI2E,KAAK,KAAMN,EAAO,GAAGO,UAEpC1F,GAAQA,EAAK+B,SAGhBpC,ECzEE,SAA0Be,GAChC,IAAIiF,EAAU,GAAI9C,EAAY,EAE9B,IAAK,IAAI0C,KAAO7E,EAGfmC,EAAYnC,EAAQ6E,GAAK,GAAGtE,OAE5B0E,EAAQJ,GAAO7E,EAAQ6E,GAAKlC,OAAO,SAAAjB,GAAM,OAAIA,EAAOnB,SAAW4B,IAgBhE,OAAO8C,EDiDOC,CADVlG,EAAUkB,EAAiBZ,EAD3BgF,EAAQjF,EAAeC,GACiBc,IAGxC/C,KAAK8H,SAAS,CAAEb,QAAOtF,UAASC,oBAhFfhC,aE8CPmI,qBAlDZ,SAAAA,IAAc,IAAAhI,EAAA,OAAAZ,OAAAgC,EAAA,EAAAhC,CAAAa,KAAA+H,IACfhI,EAAAZ,OAAAiC,EAAA,EAAAjC,CAAAa,KAAAb,OAAAkC,EAAA,EAAAlC,CAAA4I,GAAAzG,KAAAtB,QACKuB,MAAQ,CACZyG,QAAS,GACTC,SAAS,GAJKlI,yFAQYmI,GACrBlI,KAAKyB,MAAMwG,UAAYC,EAAUD,SAChCjI,KAAKyB,MAAMuG,UAAYE,EAAUF,SAErChI,KAAK8H,SAAS,CACbE,QAASE,EAAUF,QACnBC,QAASC,EAAUD,gDAMrBjI,KAAK8H,SAAS,CACbE,QAAS,GACXC,SAAS,qCAIA,IAAAE,EAAAnI,KAAAmH,EAEqBnH,KAAKuB,MAA1ByG,EAFAb,EAEAa,QAASC,EAFTd,EAESc,QAEnB,OACCzI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUyI,MAAO,CAAEC,MAAOJ,EAAU,OAAS,OACzDzI,EAAAC,EAAAC,cAAA,KAAGO,KAAK,qBACPN,UAAU,WACVO,QAAU,kBAAMiI,EAAKG,gBAFtB,QAKA9I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,qHAGCqI,EAAQO,MAAM,EAAG,IAAIxK,IAAI,SAACyK,EAAM7D,GAAP,OACxBnF,EAAAC,EAAAC,cAAA,KAAG8H,IAAK7C,GAAIA,EAAE,EAAd,KAAmB6D,EAAK1G,SAAxB,YAA2C0G,EAAKtF,mBA1ClCtD,6BCCf,SAAS6I,EAAiBxG,GAQ7B,OAgEG,SAA6Be,GAChC,IAAId,EAAW,GAAIyC,EAAI,EAEvB,KAAMA,EAAI3B,EAAMgB,QAAS,CACrB,IAAI0E,EAAM1F,EAAM2B,KAAMpC,EAAU,GAEhCA,EAAQc,KAAOsF,SAASD,EAAI,IAC5BnG,EAAQT,SAAW4G,EAAI,GACvBnG,EAAQqG,KAAOF,EAAI,GACnBnG,EAAQgD,QAAUmD,EAAI,GAEc,IAAhCvJ,OAAOD,KAAKqD,GAASyB,QACdzB,GACAA,EAAQT,UACa,cAArBS,EAAQT,UACRS,EAAQT,SAASkC,QAExB9B,EAASsB,KAAKjB,GAGtB,OAAOL,EAtFC2G,CAoCL,SAAqB7F,GACpB,IAAI2B,EAAI,EAAGvC,EAAO,GAAIqE,EAAS,GAE/B,KAAM9B,EAAI3B,EAAMgB,UAYP8E,EAXO9F,EAAM2B,IAYboE,WAAW,MAAQJ,SAASG,IAAmB,MAATA,KAXnC1G,EAAK4B,OAAS,IAAG5B,EAAO4G,EAAc5G,IACtCA,EAAK4B,OAAS,GAAGyC,EAAOjD,KAAKpB,GAEjCA,EAAO,IAEXA,EAAKoB,KAAKR,EAAM2B,MAK5B,IAAiBmE,EAHT,OAAOrC,EAjDHwC,CAgBL,SAA2BhH,GAC1B,IAAIiH,EAAY,GAEZC,EAAS,IAAIC,SAAO,CACpBC,OAAQ,SAACP,IAGgB,KAFrBA,EAAOA,EAAKQ,QAEFtF,QAAyB,MAAT8E,GACrBA,EAAK9E,OAAS,GAAc,8HAAT8E,IAEpBI,EAAU1F,KAAKsF,KAGxB,CAAES,gBAAgB,IAKrB,OAHAJ,EAAOK,MAAMvH,GACbkH,EAAOM,MAEAP,EAnCHQ,CADRzH,EAQG,SAAyBA,GACxB,IAGI0H,EAAa1H,EAAKuD,QAHF,8BAIhBoE,EAAc3H,EAAKuD,QAHJ,iCAKnB,OAAOvD,EAAKkE,UAAUwD,EAAYC,GAf/BC,CAAgB5H,MA0D3B,SAAS+G,EAAchG,GAGnB,IAFA,IAAI2B,EAAI,EAAGY,EAAU,GAEdZ,EAAI3B,EAAMgB,QACbuB,GAAY,IAAMvC,EAAM2B,KAI5B,OAFA3B,EAAM,GAAKuC,EAAQ+D,OAEZtG,EAAMuF,MAAM,EAAG,GChE1B,IACCxF,EAAc,IAAI2E,KAAK,KADV,EACuB,GAAGC,UAEpCmC,EAAYC,MAAQ,sBAiITC,cA1HZ,SAAAA,IAAc,IAAAjK,EAAA,OAAAZ,OAAAgC,EAAA,EAAAhC,CAAAa,KAAAgK,IACfjK,EAAAZ,OAAAiC,EAAA,EAAAjC,CAAAa,KAAAb,OAAAkC,EAAA,EAAAlC,CAAA6K,GAAA1I,KAAAtB,QACKuB,MAAQ,CACZU,KAAM,GACNgI,aAAc,GACdC,gBAAgB,GALFnK,mFAUbC,KAAKmK,SApBK,4CAuBMC,GAChBpK,KAAK8H,SAAS,CACbmC,aAAcG,EACdF,gBAAgB,qCAIT,IAAAG,EAAAlD,EAEuCnH,KAAKuB,MAA5CU,EAFAkF,EAEAlF,KAAMgI,EAFN9C,EAEM8C,aAAcC,EAFpB/C,EAEoB+C,eAE9B,OACG1K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAChBH,EAAAC,EAAAC,cAAC4K,EAAD,MACA9K,EAAAC,EAAAC,cAAC6K,EAAD,MAGCT,EACItK,EAAAC,EAAAC,cAAC8K,EAAD,CACDvI,KAAO6H,EACP1C,MA3CM,EA4CNvF,WAAa7B,KAAKyK,iBAAiBC,KAAK1K,QAGvC8J,GAAa7H,EAAK+B,SAAWjB,EAQ9B,sBANAvD,EAAAC,EAAAC,cAAC8K,EAAD,CACCvI,MAAOoI,EAAA,IAAG5H,OAAHkI,MAAAN,EAAAlL,OAAAqD,EAAA,EAAArD,CAAa8C,IACpBmF,MAnDK,EAoDLvF,WAAa7B,KAAKyK,iBAAiBC,KAAK1K,QAM7CR,EAAAC,EAAAC,cAACkL,EAAD,CAAS5C,QAAUiC,EAAehC,QAAUiC,sCAKpC9C,GACR,GAAI0C,EACHe,QAAQC,IAAI,+BAAgC1D,EAAO,aAAc0C,EAAU9F,OAAQ,YAEnFhE,KAAK8H,SAAS,CAAE7F,KAAM6H,QAEhB,CACNe,QAAQC,IAAI,mCAIZ,IAFA,IAAIlC,EAAO,IAAIlB,KAAK,KAAMN,EAAQ,EAAG,GAAI2D,EAAM,GAEtCpG,EAAI,EAAGA,EAAI5B,EAAa4B,IAClCoG,EAAM,yBAA2B/K,KAAKgL,YAAYpC,GAAQ,aAC1D5I,KAAKiL,UAAUF,GACfnC,EAAKsC,QAAQtC,EAAKjB,UAAY,sCAKrBoD,GAAK,IAAA5C,EAAAnI,KAChBmL,MAAM,oBAAsBJ,GACxBK,KAAK,SAAAC,GAEL,GADAR,QAAQC,IAAIC,EAAM,OAASM,EAASC,IACjCD,EAASC,GACb,OAAOD,EAASvC,SAKfsC,KAAK,SAAAG,GACD,IAAAC,EAAUD,EAAO9C,EAAiB8C,GAAQ,GAC3CtJ,EAASkG,EAAK5G,MAAdU,KAEHA,EAAKuB,KAAKgI,GACVrD,EAAKL,SAAS,CAAE7F,WAIhBwJ,MAAM,SAAAC,GACRb,QAAQC,IAAI,kBAAmBC,EAAKW,EAAInG,+CAI7BqD,GACb,IAAI+C,EAAO/C,EAAKgD,cACfxE,EAAQwB,EAAKiD,WAAa,EAC1BC,EAAMlD,EAAKjB,UASZ,OAPImE,EAAM,KACRA,EAAM,IAAMA,GAEV1E,EAAQ,KACVA,EAAQ,IAAMA,GAGRuE,EAAO,IAAMvE,EAAQ,IAAM0E,SA7GnBlM,aCNEmM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7M,EAAAC,EAAAC,cAAC4M,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.ee984075.chunk.js","sourcesContent":["var map = {\n\t\"./comments_01.json\": 69,\n\t\"./comments_02.json\": 70,\n\t\"./comments_03.json\": 71,\n\t\"./comments_04.json\": 72,\n\t\"./comments_05.json\": 73,\n\t\"./comments_06.json\": 74,\n\t\"./comments_07.json\": 75,\n\t\"./comments_08.json\": 76,\n\t\"./comments_09.json\": 77,\n\t\"./comments_10.json\": 78\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 68;","import React, { Component } from 'react'\nimport './Header.css'\n\nclass Header extends Component {\n  \trender() {       \n\t\treturn (\n\t\t\t<header className=\"Header\">\n\t\t  \t\t<p>\n\t\t\t\t\t<span>minfin</span><span>members</span>\n\t\t  \t\t</p>\n\t\t\t</header>\n\t\t)\n  \t}\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './TopNav.css'\n\nclass TopNav extends Component {\n\n\topenRules() {\n\t\talert('RULES')\n\t}\n\n  \trender() {       \n\t\treturn (\n\t\t\t<div className=\"topnav\">\n\t\t\t  \t<a href=\"#rules\" onClick={ () => this.openRules() }>Open rules</a>\n\t\t\t  \t<input type=\"text\" placeholder=\"Enter your name...\" />\n\t\t\t</div>\n\t\t)\n  \t}\n}\n\nexport default TopNav","import React, { Component } from 'react'\nimport './RatingItem.css'\n\nconst NAMES_RUS = {\n\tbestMembers: \t\t\t'Лучший форумчанин',\n\tmostValuableMembers: \t'Самый ценный форумчанин', \n\tmostPopularComments: \t'Лучший комментарий',\n\tmostPopularMembers: \t'Приз читательских симпатий',\n\tmostActiveMembers: \t\t'Заслуженный работник форума',\n\tbestNewsBots: \t\t\t'Лучший поставщик новостей',\n\tworstNewsBots: \t\t\t'Худший поставщик новостей',\n\tmrShort: \t\t\t\t'Мистер краткость',\n\tmrLong: \t\t\t\t'Мистер длинный язык',\n\tmostPopularNews: \t\t'Самая популярная новость',\n\tmostPopularWord: \t\t'Самое популярное слово'\n}\n\nclass RatingItem extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {}\n  \t}\n\n  \tcomponentDidMount() {\n  \t\t\n  \t}\n\n  \trender() {\n  \t\tlet { name, ratings, winners, openRating } = this.props\n\n\t\treturn (\n\t\t\t<div className='RatingItem'>\n\t\t\t\t<div className='title'>{ NAMES_RUS[name] }</div>\n\n\t\t\t\t<div className='winner' onClick={ () => openRating(ratings[name]) }>\n\t\t  \t\t\t<div className='winner-name'>{ winners[name][0].username }</div>\n\t\t  \t\t\t<div className='winner-scores'>{ winners[name][0].description }</div>\n\t\t  \t\t</div>\n\t\t  \t</div>\n\t\t)\n  \t}\n}\n\nexport default RatingItem\n","export function createUsersObj(data) {\n\tlet commentsByUsers = createObjCommentsByUsers(data)\n\n\treturn commentsByUsers\n}\n\nfunction createObjCommentsByUsers(comments) {\n\tlet user = '', temp = [], commentsByUsers = {} // { username: [ comments ] }\n\n\tcomments.forEach(comment => {\n\t\tuser = comment.username\n\t\ttemp = commentsByUsers[user] || []\n\t\tcommentsByUsers[user] = [ ...temp, comment ]\t\t\n\t})\n\n\treturn commentsByUsers\t\n}","const RATINGS = {\n\tbestMembers: [],\n\tmostValuableMembers: [],\n\tmostPopularComments: [],\n\tmostPopularMembers: [],\n\tmostActiveMembers: [],\n\tbestNewsBots: [],\n\tworstNewsBots: [],\n\tmrShort: [],\n\tmrLong: [],\n\tmostPopularNews: [],\n\tmostPopularWord: []\n}\n\nlet commentsByUsers = {}, // { user: [ comments ] }\n\tdays = 30\n\nexport function createRatingsObj(comments, usersObj, daysInMonth) {\n\n\tcommentsByUsers = usersObj\n\tdays = daysInMonth\n\n\tRATINGS.mostPopularMembers\t = sortUsersByVotes()\n\tRATINGS.mostPopularComments\t = sortComments(comments)\n\tRATINGS.mostActiveMembers\t = sortUsersByTotalComments()\n\tRATINGS.mostValuableMembers\t = sortUsersByAverageVote()\n\tRATINGS.bestMembers\t\t\t = sortUsersByScores()\n\tRATINGS.bestNewsBots\t\t = sortUsersByCommentsWithLinks().best\n\tRATINGS.worstNewsBots\t\t = sortUsersByCommentsWithLinks().worst\n\tRATINGS.mrShort\t\t\t\t = sortUsersByMessagesLength().short\n\tRATINGS.mrLong\t\t\t\t = sortUsersByMessagesLength().long\n\tRATINGS.mostPopularNews\t\t = sortMessagesWithLinksByVotes(comments)\n\tRATINGS.mostPopularWord\t\t = sortWordsInMessages(comments)\n\n\t/*\n\t\tprint ratings in console\n\t*/\n\t// for (let rating in RATINGS) {\n\t// \tconsole.log('RATING', rating, ':')\n\t// \tfor (let i = 0; i < 10; i++) {\n\t// \t\tlet array = RATINGS[rating]\n\t// \t\tif (i < array.length)\n\t// \t\t\tconsole.log(i+1, JSON.stringify(array[i]))\n\t// \t}\t\t\n\t// }\n\n\treturn RATINGS\n}\n\n/*===========================================================\n\tCOMMON FUNCTIONS\n===========================================================*/\nfunction sortCommentsByVotes(comments) {\n\treturn comments.sort((a, b) => {\n\t\ta.scores = a.vote\n\t\ta.description = `\n\t\t\t\"${a.message ? a.message.substring(0, 150) : ''}...\"\n\t\t\tКоличество голосов: ${a.scores}\n\t\t`\n\t\treturn b.vote - a.vote\n\t})\n}\n\nfunction commentIsNews(comment) {\n\treturn comment.message && comment.message.indexOf('http') >= 0\n}\n\nfunction createArrayUsersByCommentsQuantities() {\n\tlet arrayUsersQuantities = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tscores = Math.round(commentsByUsers[username].length / days * 10) / 10\n\n\t\tarrayUsersQuantities.push({ \n\t\t\tusername,\n\t\t\tquantity: commentsByUsers[username].length,\n\t\t\tdays,\n\t\t\tscores,\n\t\t\tdescription: `Среднее количество комментариев в день: ${scores}`\n\t\t})\n\t}\n\n\treturn arrayUsersQuantities\n}\n\nfunction createArrayUsersByCommentsVotes() {\n\tlet arrayUsersVotes = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\t// comments with news not includes!\n\t\t\tif (!commentIsNews(comment)) totalVotes += comment.vote\n\t\t})\n\n\t\tscores = Math.round(totalVotes / days * 10) / 10\n\n\t\tarrayUsersVotes.push({ \n\t\t\tusername,\n\t\t\ttotalVotes,\n\t\t\tdays,\n\t\t\tscores\n\t\t})\n\t}\n\n\treturn arrayUsersVotes\n}\n\nfunction createArrayUsersWithLinkInComments() {\n\tlet arrayUsersWithLinks = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet quantity = 0, totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\tif (commentIsNews(comment)) {\n\t\t\t\tquantity++\n\t\t\t\ttotalVotes += comment.vote\n\t\t\t}\n\t\t})\n\n\t\t// let scores = (totalVotes && quantity) ? (totalVotes / quantity) : 0\n\t\tif (quantity && quantity >= days) {\n\t\t\tscores = Math.round(totalVotes / quantity * 10) / 10\n\n\t\t\tarrayUsersWithLinks.push({ \n\t\t\t\tusername,\n\t\t\t\ttotalVotes,\n\t\t\t\tquantity,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя оценка за каждую оставленную новость: ${scores}`\n\t\t\t})\n\t\t}\n\t}\n\n\treturn arrayUsersWithLinks\n}\n\nfunction createArrayUsersWithoutLinkInComments() {\n\tlet arrayUsersWithLinks = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet quantity = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\tif (!commentIsNews(comment)) quantity++\n\t\t})\n\n\t\tif (quantity) {\n\t\t\tscores = Math.round(quantity / days * 10) / 10\n\n\t\t\tarrayUsersWithLinks.push({ \n\t\t\t\tusername,\n\t\t\t\tquantity,\n\t\t\t\tdays,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\n\treturn arrayUsersWithLinks\n}\n\nfunction createArrayUsersByAverageLengthMessages() {\n\tlet array = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet summ = 0, messages = commentsByUsers[username]\n\n\t\tmessages.forEach(comment => { \n\t\t\tif (comment.message) summ += comment.message.length\n\t\t}) \n\n\t\tscores = Math.round(summ / messages.length * 10) / 10\n\n\t\tif (username !== 'undefined' && messages.length >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername,\n\t\t\t\ttotalLength: summ,\n\t\t\t\tquantity: messages.length,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя длина оставленных сообщений: ${scores}`\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST MEMBER\n*/\n\nfunction getMembersRating() {\n\tlet scores = 0, members = {} // { username: scores }\n\n\tfunction addScore(username, userScores) {\n\t\tif (!members[username]) members[username] = userScores\n\t\telse members[username] += userScores\n\t}\n\n\t/*\n\t\tconcat 3 ratings \n\t\tscore = length of ranking - place in the ranking\n\t\tsumm 3 scores\n\t*/\n\t// RATINGS.mostPopularMembers.forEach((user, i) => {\n\t// \tscores = RATINGS.mostPopularMembers.length - i\n\t// \taddScore(user.username, scores)\n\t// })\n\n\tRATINGS.mostActiveMembers.forEach((user, i) => {\n\t\tscores = RATINGS.mostActiveMembers.length - i\n\t\taddScore(user.username, scores)\n\t})\n\n\tRATINGS.mostValuableMembers.forEach((user, i) => {\n\t\tscores = RATINGS.mostValuableMembers.length - i\n\t\taddScore(user.username, scores)\n\t})\t\n\t\n\treturn members\n}\n\nfunction sortUsersByScores() {\n\tlet membersObj = getMembersRating(), arrayMembers = [], scores = 0,\n\t\tmaxScores = RATINGS.mostActiveMembers.length + RATINGS.mostValuableMembers.length\n\n\tfor (let username in membersObj) {\n\t\tscores = Math.round(membersObj[username] / maxScores * 1000) / 10\n\n\t\tarrayMembers.push({ \n\t\t\tusername, \n\t\t\tscores,\n\t\t\tdescription: `Лучший показатель активность + полезность: ${scores}%`\n\t\t})\n\t}\n\n\tarrayMembers.sort((a, b) => b.scores - a.scores )\n\n\treturn arrayMembers\t\n}\n\n/*===========================================================\n\tMOST POPULAR MEMBER\n\tscores = total votes of member / days\n*/\n\nfunction sortUsersByVotes() {\n\tlet array = createArrayUsersByCommentsVotes()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tMOST POPULAR COMMENT\n\tscores = comment with max vote\n*/\n\nfunction sortComments(comments) {\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\treturn sortedComments\n}\n\n/*===========================================================\n\tMOST ACTIVE MEMBER\n\tscores = quantity of comments / days\n*/\n\nfunction sortUsersByTotalComments() {\n\tlet array = createArrayUsersByCommentsQuantities()\n\t// let array = createArrayUsersWithoutLinkInComments()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*==========================================================\n\tMOST VALUABLE MEMBER\n\tscores = total votes of member / quantity of comments\n*/\n\nfunction sortUsersByAverageVote() {\n\tlet array = [], quantity = 0, votes = 0, scores = 0\n\n\tRATINGS.mostPopularMembers.forEach(member => {\n\t\tvotes = member.totalVotes\n\t\tquantity = commentsByUsers[member.username].length\n\t\tscores = Math.round(votes / quantity * 10) / 10\n\n\t\tif (quantity >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername: member.username,\n\t\t\t\tvotes,\n\t\t\t\tquantity,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Лучшая средняя оценка за оставленные комментарии: ${scores}`\n\t\t\t})\t\t\t\n\t\t}\n\n\t})\n\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST NEWS BOT\n\tscores = max total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n\n\tWORST NEWS BOT\n\tscores = min total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByCommentsWithLinks() {\n\tlet arrayBest = createArrayUsersWithLinkInComments(days),\n\t\tarrayWorst = [].concat(arrayBest),\n\t\tresult = {}\n\n\tarrayBest.sort((a, b) => b.scores - a.scores )\n\tarrayWorst.sort((a, b) => a.scores - b.scores )\n\n\tresult.best = arrayBest\n\tresult.worst = arrayWorst\n\n\treturn result\n}\n\n/*===========================================================\n\tMR. SHORT\n\tscores = min total length of message / quantity of message\n\t(quantity must be more than \"days\")\n\n\tMR. LONG TONGUE\n\tscores = max total length of message / quantity of message\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByMessagesLength() {\n\tlet arrayShort = createArrayUsersByAverageLengthMessages(days),\n\t\tarrayLong = [].concat(arrayShort),\n\t\tresult = {}\n\n\tarrayShort.sort((a, b) => a.scores - b.scores)\n\tarrayLong.sort((a, b) => b.scores - a.scores)\n\n\tresult.short = arrayShort\n\tresult.long = arrayLong\n\n\treturn result\n}\n\n/*===========================================================\n\tMOST POPULAR NEWS\n\tscores = max total votes in comment with link\n*/\n\nfunction sortMessagesWithLinksByVotes(comments) {\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\tlet commentsWithLinks = sortedComments\n\t\t.filter(comment => {\n\t\t\tif (comment.message) return comment.message.indexOf('http') >= 0 \n\t\t})\n\n\treturn commentsWithLinks\n}\n\n/*===========================================================\n\tMOST POPULAR WORD\n\tscores = max popular word in comments / days\n*/\n\nfunction sortWordsInMessages(comments) {\n\tlet array = [], scores = 0, wordsObj = createWordsObj(comments)\n\n\tfor (let word in wordsObj) {\n\t\tscores = Math.round(wordsObj[word] / days * 10) / 10\n\n\t\tif (scores > 1) {\n\t\t\tarray.push({\n\t\t\t\tword,\n\t\t\t\tquantity: wordsObj[word],\n\t\t\t\tdays,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\tarray.sort((a, b) => b.scores - a.scores)\n\n\treturn array\n}\n\nfunction createWordsObj(comments) {\n\tlet wordsObj = {}, wordScores = 0\n\n\tcomments.forEach(comment => {\n\t\tlet arrayMessage = createArrayWordsFromCommentMessage(comment)\n\n\t\tarrayMessage.forEach(word => {\n\t\t\twordScores = wordsObj[word] ? wordsObj[word] + 1 : 1\n\t\t\twordsObj[word] = wordScores\n\t\t})\n\t})\n\treturn wordsObj\n}\n\nfunction createArrayWordsFromCommentMessage(comment) {\n\tlet message = comment.message \n\t\t? comment.message.toLowerCase()\n\t\t\t.replace(/[.,?!()-=*1234567890]/g, '')\n\t\t: ''\n\n\treturn message.split(' ').filter(word => word.length > 3)\n}","import React, { Component } from 'react'\nimport RatingItem from './RatingItem'\nimport './Ratings.css'\n\nimport { createUsersObj } from './utils/UsersUtil'\nimport { createRatingsObj } from './utils/RatingsUtil'\nimport { createWinnersObj } from './utils/WinnersUtil'\n\nclass Ratings extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tusers: {}, \t\t\t// { user: [ comments ] }\n\t\t\tratings: {}, \t\t// { rating: [ all rating ] }\n\t\t\twinners: {} \t\t// { nominant: [ 1 or similars ] }\n\t\t}\n  \t}\n\n  \tcomponentDidMount() {\n  \t\tthis._createDataObjects()\n  \t}\n\n  \trender() {\n  \t\tlet { users, ratings, winners } = this.state\n\n  \t\tconst { data, month, openRating } = this.props,\n  \t\t\tjsonText = JSON.stringify(data)\n\n\t\treturn (\n\t  \t\t<div className=\"Ratings\">\n\t\t\t\t<section>\n\t\t\t\t{\n\t\t  \t\t\t// array.map((comment, i) => \n\t\t  \t\t\t// \t<p key={i}>\n\t\t  \t\t\t// \t\t{comment.toString()}\n\t\t  \t\t\t// \t</p>\n\t\t  \t\t\t// )\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\t// array.map((comment, i) => \n\t\t  \t\t\t// \t<div key={i}>\n\t\t  \t\t\t// \t\t<span>vote: {comment.vote}</span>\n\t\t  \t\t\t// \t\t<span>name: {comment.username}</span>\n\t\t  \t\t\t// \t\t<span>date: {comment.date}</span>\n\t\t  \t\t\t// \t\t<span>message: {comment.message}</span>\n\t\t  \t\t\t// \t</div>\n\t\t  \t\t\t// )\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\tusers && ratings && winners ? \n\t\t  \t\t\t\t<div>\n\t\t  \t\t\t\t\t<p>MONTH: { month }</p>\n\t\t  \t\t\t\t\t<p>\n\t\t  \t\t\t\t\t\t<span>All members: { Object.keys(users).length }</span><br />\n\t\t  \t\t\t\t\t\t<span>All comments: { data.length }</span><br />\n\t\t  \t\t\t\t\t</p>\n\t\t  \t\t\t\t{\n\t\t  \t\t\t\t\tObject.keys(winners).map((name, i) => \t\n\t\t  \t\t\t\t\t\t<RatingItem key={i}\n\t\t  \t\t\t\t\t\t\tname={ name }\n\t\t  \t\t\t\t\t\t\tratings={ ratings }\n\t\t  \t\t\t\t\t\t\twinners={ winners }\n\t\t  \t\t\t\t\t\t\topenRating={ openRating }\n\t\t  \t\t\t\t\t\t/>\t  \t\t\t\t\t\n\t\t  \t\t\t\t\t)\n\t\t  \t\t\t\t}\n\t\t  \t\t\t\t</div>\n\t\t  \t\t\t: 'Parsing data.....'\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\t// jsonText\n\t\t  \t\t}\n\t\t\t\t</section>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_createDataObjects() {\n  \t\tlet users, ratings, winners\n\n  \t\tconst { data, month } = this.props,\n  \t\t\tdaysInMonth = new Date(2018, month, 0).getDate()\n\n  \t\tif (data && data.length) {\n  \t\t\tusers = createUsersObj(data)\n  \t\t\tratings = createRatingsObj(data, users, daysInMonth)\n  \t\t\twinners = createWinnersObj(ratings)\n\n  \t\t\tthis.setState({ users, ratings, winners })\n  \t\t}\n  \t}\n}\n\nexport default Ratings\n","// const WINNERS = {\n// \tmostPopularMembers: [],\n// \tmostPopularComments: [],\n// \tmostActiveMembers: [],\n// \tbestMembers: [],\n// \tbestNewsBots: [],\n// \tworstNewsBots: [],\n// \tmrShort: [],\n// \tmrLong: [],\n// \tmostPopularNews: [],\n// \tmostPopularWord: []\n// }\n\nexport function createWinnersObj(RATINGS) {\n\tlet WINNERS = {}, maxScores = 0\n\n\tfor (let key in RATINGS) {\n\t\t// WINNERS[key] = getArrayWinners(RATINGS[key])\n\n\t\tmaxScores = RATINGS[key][0].scores\n\t\t\n\t\tWINNERS[key] = RATINGS[key].filter(member => member.scores === maxScores)\n\n\t\t// if (key === 'mostPopularWord') RATINGS[key].forEach(member => { console.log(member) })\n \t}\n\t\n\t// WINNERS.mostPopularMembers\t = getArrayWinners(RATINGS.mostPopularMembers, 'votes')\n\t// WINNERS.mostPopularComments\t = getArrayWinners(RATINGS.mostPopularComments, 'vote')\n\t// WINNERS.mostActiveMembers\t = getArrayWinners(RATINGS.mostActiveMembers, 'totalComments')\n\t// WINNERS.bestMembers\t\t\t = getArrayWinners(RATINGS.bestMembers, 'score')\n\t// WINNERS.bestNewsBots\t\t \t = getArrayWinners(RATINGS.bestNewsBots, 'commentsWithLinks')\n\t// WINNERS.worstNewsBots\t\t = getArrayWinners(RATINGS.worstNewsBots, 'commentsWithLinks')\n\t// WINNERS.mrShort\t\t\t\t = getArrayWinners(RATINGS.mrShort, 'averageLength')\n\t// WINNERS.mrLong\t\t\t\t = getArrayWinners(RATINGS.mrLong, 'averageLength')\n\t// WINNERS.mostPopularNews\t\t = getArrayWinners(RATINGS.mostPopularNews, 'vote')\n\t// WINNERS.mostPopularWord\t\t = getArrayWinners(RATINGS.mostPopularWord, 'totalWords')\n\n\treturn WINNERS\n}\n\n// function getArrayWinners(sortedArray) {\n// \tlet result = [ sortedArray[0] ], i = 1, key = 'scores'\n\n// \twhile (i < sortedArray.length - 1 && \n// \t\tsortedArray[i][key] === sortedArray[i - 1][key]) {\n\n// \t\tresult.push(sortedArray[i++])\n// \t}\n\n// \treturn result\n// }\n","import React, { Component } from 'react'\nimport './Overlay.css'\n\nclass Overlay extends Component {\n  \tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tcontent: [],\n\t\t\topening: false\n\t\t}\n  \t}\n\n  \tcomponentWillReceiveProps(nextProps) {\n  \t\tif (this.props.opening !== nextProps.opening \n  \t\t\t\t|| this.props.content !== nextProps.content) {\n  \t\t\t\n  \t\t\tthis.setState({ \n  \t\t\t\tcontent: nextProps.content, \n  \t\t\t\topening: nextProps.opening \n  \t\t\t})\n  \t\t}\n  \t}\n\n  \thandleClose() {\n  \t\tthis.setState({ \n  \t\t\tcontent: [],\n\t\t\topening: false \n\t\t})\n  \t}\n\n  \trender() {\n\n  \t\tconst { content, opening } = this.state\n\n\t\treturn (\n\t\t\t<div className=\"Overlay\" style={{ width: opening ? '100%' : '0%' }}>\n\t\t\t  \t<a href=\"javascript:void(0)\" \n\t\t\t  \t\tclassName=\"closebtn\" \n\t\t\t  \t\tonClick={ () => this.handleClose() }\n\t\t\t  \t>&times;</a>\n\n\t\t\t  \t<div className=\"overlay-content\">\n\t\t\t  \tТоп 10 позиций рейтинга:\n\t\t\t  \t{\n\t\t\t  \t\tcontent.slice(0, 10).map((rate, i) => \n\t\t\t  \t\t\t<p key={i}>{i+1}. {rate.username}, score: {rate.scores}</p>\n\t\t\t  \t\t)\n\t\t\t  \t}\n\t\t\t  \t</div>\n\t\t\t</div>\n\t  \t)\n  \t}\n}\n\nexport default Overlay\n","import { Parser } from 'htmlparser2'\n\n\n\nexport function parseDataToArray(data) {\n    let array = []\n\n    data = getFullComments(data)\n    array = parseFullComments(data)\n    array = concatArray(array)\n    array = createCommentsArray(array)\n\n    return array\n}\n\nexport function getFullComments(data) {\n        const startMarker = '<div id=\"commentFullList\">',\n            finishMarker = '<div class=\"for-set-comment\">',\n\n            startIndex = data.indexOf(startMarker),\n            finishIndex = data.indexOf(finishMarker)\n\n        return data.substring(startIndex, finishIndex)\n    }\n\nexport function parseFullComments(data) {\n        let arrayText = []\n\n        let parser = new Parser({\n            ontext: (text) => {\n                text = text.trim()\n\n                if ((text.length === 1 && text === '0') ||\n                    (text.length > 1 && text !== 'удаленный комментарий')) {\n\n                    arrayText.push(text)\n                }\n            }\n        }, { decodeEntities: true })\n        \n        parser.write(data)\n        parser.end()\n\n        return arrayText\n    }\n\nexport function concatArray(array) {\n        let i = 0, temp = [], result = []\n\n        while(i < array.length) {\n            if (isScore(array[i])) {\n                if (temp.length > 3) temp = concatMessage(temp)\n                if (temp.length > 0) result.push(temp)\n\n                temp = []\n            }\n            temp.push(array[i++])\n        }\n        return result\n    }\n\nfunction isScore(text) {\n    return (text.startsWith('+') && parseInt(text)) || text === '0'\n}\n\nfunction concatMessage(array) {\n    let i = 3, message = ''\n\n    while (i < array.length) {\n        message += (\" \" + array[i++])\n    }\n    array[3] = message.trim()\n\n    return array.slice(0, 4)\n}\n\nexport function createCommentsArray(array) {\n    let comments = [], i = 0\n\n    while(i < array.length ) {\n        let row = array[i++], comment = {}\n\n        comment.vote = parseInt(row[0])\n        comment.username = row[1]\n        comment.date = row[2]\n        comment.message = row[3]\n\n        if (Object.keys(comment).length === 4 \n                && comment\n                && comment.username\n                && comment.username !== 'undefined' \n                && comment.username.length) {\n\n            comments.push(comment)\n        }\n    }\n    return comments\n}\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport TopNav from './TopNav'\nimport Ratings from './Ratings'\nimport Overlay from './Overlay'\nimport './App.css'\n\nimport { parseDataToArray } from './utils/ParseUtil'\n\nconst MONTH = 6,\n\tdaysInMonth = new Date(2018, MONTH, 0).getDate()\n\nlet localData = require('./resources/comments_' + (MONTH > 9 ? MONTH : '0' + MONTH) + '.json')\n// let localData = null\n\n// import jsonfile from 'jsonfile'\n\n\nclass App extends Component {\n  \tconstructor() {\n\t\tsuper()\n\t\tthis.state = { \n\t\t\tdata: [],\n\t\t\tactiveRating: [],\n\t\t\topeningOverlay: false\n\t\t}\n  \t}\n\n  \tcomponentDidMount() {\n  \t\tthis._setData(MONTH)\n  \t}\n\n  \thandleOpenRating(rating) {\n  \t\tthis.setState({ \n  \t\t\tactiveRating: rating,\n  \t\t\topeningOverlay: true\n  \t\t})\n  \t}\n\n  \trender() {\n\n  \t\tconst { data, activeRating, openingOverlay } = this.state\n\n\t\treturn (\n\t  \t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<TopNav />\n\n\t\t\t\t{ \n\t\t\t\t\tlocalData \n\t\t\t\t\t\t? \t<Ratings \n\t\t\t\t\t\t\t\tdata={ localData } \n\t\t\t\t\t\t\t\tmonth={ MONTH } \n\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) } \n\t\t\t\t\t\t\t/> \n\n\t\t\t\t\t\t: !localData && data.length === daysInMonth\n\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<Ratings \n\t\t\t\t\t\t\t\t\tdata={ [].concat(...data) } \n\t\t\t\t\t\t\t\t\tmonth={ MONTH } \n\t\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) }\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Loading data.......' \n\t\t\t\t}\n\n\t\t\t\t<Overlay content={ activeRating } opening={ openingOverlay } />\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_setData(month) {\n  \t\tif (localData) {\n  \t\t\tconsole.log('success load local data from', month, 'month with', localData.length, 'comments')\n\n  \t\t\tthis.setState({ data: localData })\n\n  \t\t} else {\n\t  \t\tconsole.log('no local data! load from url...')\n\n  \t\t\tlet date = new Date(2018, month - 1, 1), url = ''\n\n  \t\t\tfor (let i = 0; i < daysInMonth; i++) {\n\t\t\t\turl = 'https://minfin.com.ua/' + this._formatDate(date) + '/currency/'\n\t\t\t\tthis._loadData(url)\t\t\n\t\t\t\tdate.setDate(date.getDate() + 1)\n\t\t\t}\n  \t\t}\n  \t}\n\n  \t_loadData(url) {\n\t\tfetch(\"https://cors.io/?\" + url)\n\t  \t\t.then(response => {\n\t\t  \t\tconsole.log(url + \" -> \" + response.ok);\n\t\t  \t\tif(response.ok) {\n\t\t\t\t\treturn response.text()\n\t\t  \t\t} else {\n\t\t\t\t\t// throw new Error(\"Can't get data from \" + url)\n\t\t  \t\t}         \n\t  \t\t})\n\t  \t\t.then(page => {\n\t\t  \t\tlet newData = page ? parseDataToArray(page) : [],\n\t\t  \t\t\t{ data } = this.state\n\n\t\t  \t\tdata.push(newData)\n\t\t  \t\tthis.setState({ data })\n\n\t\t  \t\t// this._writeJsonFile(data)\n\t  \t\t})\n\t  \t\t.catch(err => {\n\t\t\t\tconsole.log(\"failed to load \", url, err.message)\n\t  \t\t})\n  \t}\n\n  \t_formatDate(date) {\n\t\tlet year = date.getFullYear(),\n\t\t\tmonth = date.getMonth() + 1,\n\t\t\tday = date.getDate()\n\n\t\tif (day < 10) {\n\t\t  day = '0' + day;\n\t\t}\n\t\tif (month < 10) {\n\t\t  month = '0' + month;\n\t\t}\n\n\t\treturn (year + '/' + month + '/' + day)\n  \t}\n\n  \t// \t_writeJsonFile(data) {\n\t// \t\tconst file = '../tmp/data.json'\n \n\t// \t\tjsonfile.writeFile(file, JSON.stringify(data))\n  \t// \t\t\t.then(res => {\n  \t//   \t\t\tconsole.log('Write complete')\n  \t// \t\t\t})\n  \t// \t\t\t.catch(error => console.error(error))\t\n  \t// \t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}