{"version":3,"sources":["resources sync /^/.//comments_.*/.json$","Header.js","TopNav.js","RatingItem.js","DropdownPeriod.js","utils/UsersUtil.js","utils/RatingsUtil.js","Ratings.js","utils/WinnersUtil.js","Overlay.js","utils/ParseUtil.js","App.js","serviceWorker.js","index.js"],"names":["map","./comments_01.json","./comments_02.json","./comments_03.json","./comments_04.json","./comments_05.json","./comments_06.json","./comments_07.json","./comments_08.json","./comments_09.json","./comments_10.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Header","react_default","a","createElement","className","Component","TopNav","alert","_this","this","href","onClick","openRules","type","placeholder","NAMES_RUS","bestMembers","mostValuableMembers","mostPopularComments","mostPopularMembers","mostActiveMembers","bestNewsBots","worstNewsBots","mrShort","mrLong","mostPopularNews","mostPopularWord","RatingItem","_this$props","props","name","rating","winner","openRating","username","description","DropdownPeriod","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","openingContent","setState","month","toggleOpeningContent","openPeriod","_this2","classContent","concat","i","key","handleOpenPeriod","createUsersObj","data","comments","user","temp","commentsByUsers","forEach","comment","toConsumableArray","createObjCommentsByUsers","RATINGS","days","createRatingsObj","usersObj","daysInMonth","array","arrayUsersVotes","scores","totalVotes","commentIsNews","Math","round","push","createArrayUsersByCommentsVotes","sort","b","sortUsersByVotes","c","message","substring","addDescriptionMessage","sortCommentsByVotes","sortComments","arrayUsersQuantities","quantity","length","createArrayUsersByCommentsQuantities","sortUsersByTotalComments","votes","member","sortUsersByAverageVote","membersObj","members","ratings","getMembersRating","arrayMembers","sortUsersByScores","sortUsersByCommentsWithLinks","best","worst","sortUsersByMessagesLength","short","long","filter","indexOf","sortMessagesWithLinksByVotes","wordsObj","wordScores","toLowerCase","replace","split","word","createArrayWordsFromCommentMessage","createWordsObj","sortWordsInMessages","arrayBest","arrayUsersWithLinks","_loop","createArrayUsersWithLinkInComments","arrayWorst","result","arrayShort","summ","messages","totalLength","createArrayUsersByAverageLengthMessages","arrayLong","Ratings","changePeriod","_this$_getDataObjects","_getDataObjects","users","winners","src_DropdownPeriod_0","src_RatingItem_0","_this$props2","Date","getDate","WINNERS","maxScores","createWinnersObj","Overlay","content","opening","close","style","width","slice","rate","parseDataToArray","row","parseInt","date","createCommentsArray","text","startsWith","concatMessage","concatArray","arrayText","parser","Parser","ontext","trim","decodeEntities","write","end","parseFullComments","startIndex","finishIndex","getFullComments","DEFAULT_MONTH","App","localData","loadedData","activeRating","openingOverlay","_setData","_ref","_this$state","src_Header_0","src_TopNav_0","src_Ratings_0","handleChangePeriod","bind","handleOpenRating","apply","src_Overlay_0","handleCloseOverlay","require","console","log","url","_formatDate","_loadData","setDate","fetch","then","response","ok","page","newData","catch","err","year","getFullYear","getMonth","day","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b8e24ec.chunk.js","sourcesContent":["var map = {\n\t\"./comments_01.json\": 71,\n\t\"./comments_02.json\": 72,\n\t\"./comments_03.json\": 73,\n\t\"./comments_04.json\": 74,\n\t\"./comments_05.json\": 75,\n\t\"./comments_06.json\": 76,\n\t\"./comments_07.json\": 77,\n\t\"./comments_08.json\": 78,\n\t\"./comments_09.json\": 79,\n\t\"./comments_10.json\": 80\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70;","import React, { Component } from 'react'\nimport './Header.css'\n\nclass Header extends Component {\n  \trender() {       \n\t\treturn (\n\t\t\t<header className=\"Header\">\n\t\t  \t\t<p>\n\t\t\t\t\t<span>minfin</span><span>members</span>\n\t\t  \t\t</p>\n\t\t\t</header>\n\t\t)\n  \t}\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './TopNav.css'\n\nclass TopNav extends Component {\n\n\topenRules() {\n\t\talert('RULES')\n\t}\n\n  \trender() {       \n\t\treturn (\n\t\t\t<div className=\"topnav\">\n\t\t\t  \t<a href=\"#rules\" onClick={ () => this.openRules() }>Open rules</a>\n\t\t\t  \t<input type=\"text\" placeholder=\"Enter your name...\" />\n\t\t\t</div>\n\t\t)\n  \t}\n}\n\nexport default TopNav","import React, { Component } from 'react'\nimport './RatingItem.css'\n\nconst NAMES_RUS = {\n\tbestMembers: \t\t\t'Лучший форумчанин',\n\tmostValuableMembers: \t'Самый ценный форумчанин', \n\tmostPopularComments: \t'Лучший комментарий',\n\tmostPopularMembers: \t'Любимчик публики',\n\tmostActiveMembers: \t\t'Заслуженный работник форума',\n\tbestNewsBots: \t\t\t'Лучший поставщик новостей',\n\tworstNewsBots: \t\t\t'Худший поставщик новостей',\n\tmrShort: \t\t\t\t'Мистер краткость',\n\tmrLong: \t\t\t\t'Мистер длинный язык',\n\tmostPopularNews: \t\t'Самая популярная новость',\n\tmostPopularWord: \t\t'Самое популярное слово'\n}\n\nclass RatingItem extends Component {\n  \trender() {\n  \t\tlet { name, rating, winner, openRating } = this.props\n\n\t\treturn (\n\t\t\t<div className='RatingItem'>\n\t\t\t\t<div className='title'>{ NAMES_RUS[name] }</div>\n\n\t\t\t\t<div className='winner' onClick={ () => openRating(rating) }>\n\t\t  \t\t\t<div className='winner-name'>{ winner.username }</div>\n\t\t  \t\t\t<div className='winner-scores'>{ winner.description }</div>\n\t\t  \t\t</div>\n\t\t  \t</div>\n\t\t)\n  \t}\n}\n\nexport default RatingItem\n","import React, { Component } from 'react'\nimport './DropdownPeriod.css'\n\nclass DropdownPeriod extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\topeningContent: false\n\t\t}\n  \t}\n\n  \ttoggleOpeningContent() {\n  \t\tlet { openingContent } = this.state\n  \t\tthis.setState({ openingContent: !openingContent })\n  \t}\n\n  \thandleOpenPeriod(month) {\n  \t\tthis.toggleOpeningContent()\n  \t\tthis.props.openPeriod(month)\n  \t}\n\n  \trender() {\n  \t\tconst { month } = this.props,\n  \t\t\t{ openingContent } = this.state\n\n  \t\tlet monthes = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ],\n  \t\t\tclassContent = `dropdown-content ${openingContent ? 'opening' : ''}`\n\n\t\treturn (\n\t\t\t<div className='DropdownPeriod'>\n\t\t\t\t<div className='dropdown'>\n\t\t\t\t\t<button className='dropbtn'\n\t\t\t\t\t\tonClick={ () => this.toggleOpeningContent() }\n\t\t\t\t\t>Current month: { month }</button>\n\n\t\t\t\t\t<div className={ classContent }>\n\t\t\t\t\t{\n\t\t\t\t\t\tmonthes.map((month, i) => \n\t\t\t\t\t\t\t<button key={i} onClick={ () => this.handleOpenPeriod(month) } >{ month }</button>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t  \t\t\n\t\t)\n  \t}\n}\n\nexport default DropdownPeriod\n","export function createUsersObj(data) {\n\tlet commentsByUsers = createObjCommentsByUsers(data)\n\n\treturn commentsByUsers\n}\n\nfunction createObjCommentsByUsers(comments) {\n\t// return { username: [ comments ] }\n\n\tlet user = '', temp = [], commentsByUsers = {} \n\n\tcomments.forEach(comment => {\n\t\tuser = comment.username\n\t\ttemp = commentsByUsers[user] || []\n\t\tcommentsByUsers[user] = [ ...temp, comment ]\t\t\n\t})\n\n\treturn commentsByUsers\t\n}","const RATINGS = {\n\tbestMembers: [],\n\tmostValuableMembers: [],\n\tmostPopularComments: [],\n\tmostPopularMembers: [],\n\tmostActiveMembers: [],\n\tbestNewsBots: [],\n\tworstNewsBots: [],\n\tmrShort: [],\n\tmrLong: [],\n\tmostPopularNews: [],\n\tmostPopularWord: []\n}\n\nlet commentsByUsers = {}, // { user: [ comments ] }\n\tdays = 30\n\nexport function createRatingsObj(comments, usersObj, daysInMonth) {\n\n\tcommentsByUsers = usersObj\n\tdays = daysInMonth\n\n\tRATINGS.mostPopularMembers\t = sortUsersByVotes()\n\tRATINGS.mostPopularComments\t = sortComments(comments)\n\tRATINGS.mostActiveMembers\t = sortUsersByTotalComments()\n\tRATINGS.mostValuableMembers\t = sortUsersByAverageVote()\n\tRATINGS.bestMembers\t\t\t = sortUsersByScores()\n\tRATINGS.bestNewsBots\t\t = sortUsersByCommentsWithLinks().best\n\tRATINGS.worstNewsBots\t\t = sortUsersByCommentsWithLinks().worst\n\tRATINGS.mrShort\t\t\t\t = sortUsersByMessagesLength().short\n\tRATINGS.mrLong\t\t\t\t = sortUsersByMessagesLength().long\n\tRATINGS.mostPopularNews\t\t = sortMessagesWithLinksByVotes(comments)\n\tRATINGS.mostPopularWord\t\t = sortWordsInMessages(comments)\n\n\treturn RATINGS\n}\n\n/*===========================================================\n\tCOMMON FUNCTIONS\n===========================================================*/\nfunction sortCommentsByVotes(comments) {\n\treturn comments.sort((a, b) => {\n\t\treturn b.scores - a.scores\n\t})\n}\n\nfunction addDescriptionMessage(comments) {\n\tcomments.forEach(c => {\n\t\tc.description = `\n\t\t\t${c.message ? c.message.substring(0, 200) : 'error'}...\n\t\t\tКоличество голосов: ${c.scores}\n\t\t`\n\t})\n}\n\nfunction commentIsNews(comment) {\n\treturn comment.message && comment.message.indexOf('http') >= 0\n}\n\nfunction createArrayUsersByCommentsQuantities() {\n\tlet arrayUsersQuantities = [], quantity = 0, scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tquantity = commentsByUsers[username].length\n\t\tscores = Math.round(quantity / days * 10) / 10\n\n\t\tarrayUsersQuantities.push({ \n\t\t\tusername,\n\t\t\tquantity,\n\t\t\tdays,\n\t\t\tscores,\n\t\t\tdescription: `Среднее количество комментариев в день: ${scores}`\n\t\t})\n\t}\n\n\treturn arrayUsersQuantities\n}\n\nfunction createArrayUsersByCommentsVotes() {\n\tlet arrayUsersVotes = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\t// comments with news not includes!\n\t\t\tif (!commentIsNews(comment)) \n\t\t\t\ttotalVotes += comment.scores\n\t\t})\n\n\t\tscores = Math.round(totalVotes / days * 10) / 10\n\n\t\tarrayUsersVotes.push({ \n\t\t\tusername,\n\t\t\ttotalVotes,\n\t\t\tdays,\n\t\t\tscores,\n\t\t\tdescription: `Среднее количество полученных голосов в день: ${scores}`\n\t\t})\n\t}\n\n\treturn arrayUsersVotes\n}\n\nfunction createArrayUsersWithLinkInComments() {\n\tlet arrayUsersWithLinks = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet quantity = 0, totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\tif (commentIsNews(comment)) {\n\t\t\t\tquantity++\n\t\t\t\ttotalVotes += comment.scores\n\t\t\t}\n\t\t})\n\n\t\t// let scores = (totalVotes && quantity) ? (totalVotes / quantity) : 0\n\t\tif (quantity && quantity >= days) {\n\t\t\tscores = Math.round(totalVotes / quantity * 10) / 10\n\n\t\t\tarrayUsersWithLinks.push({ \n\t\t\t\tusername,\n\t\t\t\ttotalVotes,\n\t\t\t\tquantity,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя оценка за каждую оставленную новость: ${scores}`\n\t\t\t})\n\t\t}\n\t}\n\n\treturn arrayUsersWithLinks\n}\n\n// function createArrayUsersWithoutLinkInComments() {\n// \tlet arrayUsersWithoutLinks = [], scores = 0\n\n// \tfor (let username in commentsByUsers) {\n// \t\tlet quantity = 0\n// \t\tcommentsByUsers[username].forEach(comment => {\n// \t\t\tif (!commentIsNews(comment)) quantity++\n// \t\t})\n\n// \t\tif (quantity) {\n// \t\t\tscores = Math.round(quantity / days * 10) / 10\n\n// \t\t\tarrayUsersWithoutLinks.push({ \n// \t\t\t\tusername,\n// \t\t\t\tquantity,\n// \t\t\t\tdays,\n// \t\t\t\tscores\n// \t\t\t})\n// \t\t}\n// \t}\n\n// \treturn arrayUsersWithoutLinks\n// }\n\nfunction createArrayUsersByAverageLengthMessages() {\n\tlet array = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet summ = 0, messages = commentsByUsers[username]\n\n\t\tmessages.forEach(comment => { \n\t\t\tif (comment.message) summ += comment.message.length\n\t\t}) \n\n\t\tscores = Math.round(summ / messages.length * 10) / 10\n\n\t\tif (username !== 'undefined' && messages.length >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername,\n\t\t\t\ttotalLength: summ,\n\t\t\t\tquantity: messages.length,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Средняя длина оставленных сообщений: ${scores}`\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST MEMBER\n*/\n\nfunction getMembersRating() {\n\tlet scores = 0, members = {}, // { username: scores }\n\t\tratings = [ \n\t\t\tRATINGS.mostActiveMembers, \n\t\t\t// RATINGS.mostPopularMembers, \n\t\t\tRATINGS.mostValuableMembers \n\t\t]\n\n\t/*\n\t\tconcat ratings \n\t\tscore = summ (place in the ranking / length of ranking) (%)\n\t*/\n\tratings.forEach(rating => {\n\t\trating.forEach((user, i) => {\n\t\t\tscores = (rating.length - i) / rating.length * 100 / ratings.length\n\n\t\t\tif (!members[user.username]) members[user.username] = scores\n\t\t\telse members[user.username] += scores\n\t\t})\n\t})\n\n\treturn members\n}\n\nfunction sortUsersByScores() {\n\tlet membersObj = getMembersRating(), arrayMembers = [], scores = 0\n\n\tfor (let username in membersObj) {\n\t\tscores = Math.round(membersObj[username] * 10) / 10\n\n\t\tarrayMembers.push({ \n\t\t\tusername, \n\t\t\tscores,\n\t\t\tdescription: `Лучший показатель активность + полезность: ${scores}%`\n\t\t})\n\t}\n\n\tarrayMembers.sort((a, b) => b.scores - a.scores )\n\n\treturn arrayMembers\t\n}\n\n/*===========================================================\n\tMOST POPULAR MEMBER\n\tscores = total votes of member / days\n*/\n\nfunction sortUsersByVotes() {\n\tlet array = createArrayUsersByCommentsVotes()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tMOST POPULAR COMMENT\n\tscores = comment with max vote\n*/\n\nfunction sortComments(comments) {\n\tlet commentsWithDescriptions = addDescriptionMessage(comments),\n\t\tsortedComments = sortCommentsByVotes(comments)\n\n\treturn sortedComments\n}\n\n/*===========================================================\n\tMOST ACTIVE MEMBER\n\tscores = quantity of comments / days\n*/\n\nfunction sortUsersByTotalComments() {\n\tlet array = createArrayUsersByCommentsQuantities()\n\t// let array = createArrayUsersWithoutLinkInComments()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*==========================================================\n\tMOST VALUABLE MEMBER\n\tscores = total votes of member / quantity of comments\n*/\n\nfunction sortUsersByAverageVote() {\n\tlet array = [], quantity = 0, votes = 0, scores = 0,\n\t\t{ mostPopularMembers } = RATINGS\n\n\tmostPopularMembers.forEach(member => {\n\t\tvotes = member.totalVotes\n\t\tquantity = commentsByUsers[member.username].length\n\t\tscores = Math.round(votes / quantity * 10) / 10\n\n\t\tif (quantity >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername: member.username,\n\t\t\t\tvotes,\n\t\t\t\tquantity,\n\t\t\t\tscores,\n\t\t\t\tdescription: `Лучшая средняя оценка за оставленные комментарии: ${scores}`\n\t\t\t})\t\t\t\n\t\t}\n\n\t})\n\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST NEWS BOT\n\tscores = max total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n\n\tWORST NEWS BOT\n\tscores = min total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByCommentsWithLinks() {\n\tlet arrayBest = createArrayUsersWithLinkInComments(days),\n\t\tarrayWorst = [].concat(arrayBest),\n\t\tresult = {}\n\n\tarrayBest.sort((a, b) => b.scores - a.scores )\n\tarrayWorst.sort((a, b) => a.scores - b.scores )\n\n\tresult.best = arrayBest\n\tresult.worst = arrayWorst\n\n\treturn result\n}\n\n/*===========================================================\n\tMR. SHORT\n\tscores = min total length of message / quantity of message\n\t(quantity must be more than \"days\")\n\n\tMR. LONG TONGUE\n\tscores = max total length of message / quantity of message\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByMessagesLength() {\n\tlet arrayShort = createArrayUsersByAverageLengthMessages(days),\n\t\tarrayLong = [].concat(arrayShort),\n\t\tresult = {}\n\n\tarrayShort.sort((a, b) => a.scores - b.scores)\n\tarrayLong.sort((a, b) => b.scores - a.scores)\n\n\tresult.short = arrayShort\n\tresult.long = arrayLong\n\n\treturn result\n}\n\n/*===========================================================\n\tMOST POPULAR NEWS\n\tscores = max total votes in comment with link\n*/\n\nfunction sortMessagesWithLinksByVotes(comments) {\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\tlet commentsWithLinks = sortedComments\n\t\t.filter(comment => {\n\t\t\tif (comment.message) return comment.message.indexOf('http') >= 0 \n\t\t})\n\n\treturn commentsWithLinks\n}\n\n/*===========================================================\n\tMOST POPULAR WORD\n\tscores = max popular word in comments / days\n*/\n\nfunction sortWordsInMessages(comments) {\n\tlet array = [], scores = 0, wordsObj = createWordsObj(comments)\n\n\tfor (let word in wordsObj) {\n\t\tscores = Math.round(wordsObj[word] / days * 10) / 10\n\n\t\tif (scores > 1) {\n\t\t\tarray.push({\n\t\t\t\tword,\n\t\t\t\tquantity: wordsObj[word],\n\t\t\t\tdays,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\tarray.sort((a, b) => b.scores - a.scores)\n\n\treturn array\n}\n\nfunction createWordsObj(comments) {\n\tlet wordsObj = {}, wordScores = 0\n\n\tcomments.forEach(comment => {\n\t\tlet arrayMessage = createArrayWordsFromCommentMessage(comment)\n\n\t\tarrayMessage.forEach(word => {\n\t\t\twordScores = wordsObj[word] ? wordsObj[word] + 1 : 1\n\t\t\twordsObj[word] = wordScores\n\t\t})\n\t})\n\treturn wordsObj\n}\n\nfunction createArrayWordsFromCommentMessage(comment) {\n\tlet message = comment.message \n\t\t? comment.message.toLowerCase()\n\t\t\t.replace(/[.,?!()-=*1234567890]/g, '')\n\t\t: ''\n\n\treturn message.split(' ').filter(word => word.length > 3)\n}","import React, { Component } from 'react'\nimport RatingItem from './RatingItem'\nimport DropdownPeriod from './DropdownPeriod'\nimport './Ratings.css'\n\nimport { createUsersObj } from './utils/UsersUtil'\nimport { createRatingsObj } from './utils/RatingsUtil'\nimport { createWinnersObj } from './utils/WinnersUtil'\n\nclass Ratings extends Component {\n\t// shouldComponentUpdate(nextProps) {\n\t// \tconsole.log(nextProps.month !== this.props.month)\n\t// \treturn nextProps.month !== this.props.month\n\t// }\n\n  \trender() {\n  \t\tconst { data, month, openRating, changePeriod } = this.props,\n  \t\t\t{ users, ratings, winners } = this._getDataObjects()\t\t\n\n\t\treturn (\n\t  \t\t<div className=\"Ratings\">\n\t\t\t\t<section>\n\t\t  \t\t{\n\t\t  \t\t\tusers&& ratings && winners ? \n\t\t  \t\t\t\t<div>\n\t\t  \t\t\t\t\t<DropdownPeriod month={ month } openPeriod={ changePeriod } />\n\t\t  \t\t\t\t\t<p>\n\t\t  \t\t\t\t\t\t<span>All members: { Object.keys(users).length }</span><br />\n\t\t  \t\t\t\t\t\t<span>All comments: { data.length }</span><br />\n\t\t  \t\t\t\t\t</p>\n\t\t  \t\t\t\t{\n\t\t  \t\t\t\t\tObject.keys(winners).map((name, i) => \t\n\t\t  \t\t\t\t\t\t<RatingItem key={i}\n\t\t  \t\t\t\t\t\t\tname={ name }\n\t\t  \t\t\t\t\t\t\trating={ ratings[name] }\n\t\t  \t\t\t\t\t\t\twinner={ winners[name][0] }\n\t\t  \t\t\t\t\t\t\topenRating={ openRating }\n\t\t  \t\t\t\t\t\t/>\t  \t\t\t\t\t\n\t\t  \t\t\t\t\t)\n\t\t  \t\t\t\t}\n\t\t  \t\t\t\t</div>\n\t\t  \t\t\t: 'Parsing data.....'\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\t// jsonUsers\n\t\t  \t\t}\n\t\t\t\t</section>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_getDataObjects() {\n  \t\tlet users, ratings, winners\n\n  \t\tconst { data, month } = this.props,\n  \t\t\tdaysInMonth = new Date(2018, month, 0).getDate()\n\n  \t\tif (data && data.length) {\n  \t\t\tusers = createUsersObj(data)\n  \t\t\tratings = createRatingsObj(data, users, daysInMonth)\n  \t\t\twinners = createWinnersObj(ratings)\n  \t\t}\n  \t\treturn { users, ratings, winners }\n  \t}\n}\n\nexport default Ratings\n","export function createWinnersObj(RATINGS) {\n\tlet WINNERS = {}, maxScores = 0\n\n\tfor (let key in RATINGS) {\n\t\tmaxScores = RATINGS[key][0].scores\n\t\t\n\t\tWINNERS[key] = RATINGS[key].filter(member => member.scores === maxScores)\n \t}\n\n\treturn WINNERS\n}","import React, { Component } from 'react'\nimport './Overlay.css'\n\nclass Overlay extends Component {\n  \trender() {\n\n  \t\tconst { content, opening, close } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"Overlay\" style={{ width: opening ? '100%' : '0%' }}>\n\t\t\t  \t<button className=\"closebtn\" onClick={ () => close() }>&times;</button>\n\n\t\t\t  \t<div className=\"overlay-content\">\n\t\t\t  \tТоп 10 позиций рейтинга:\n\t\t\t  \t{\n\t\t\t  \t\tcontent.slice(0, 10).map((rate, i) => \n\t\t\t  \t\t\t<p key={i}>{i+1}. {rate.username}, score: {rate.scores}</p>\n\t\t\t  \t\t)\n\t\t\t  \t}\n\t\t\t  \t</div>\n\t\t\t</div>\n\t  \t)\n  \t}\n}\n\nexport default Overlay\n","import { Parser } from 'htmlparser2'\n\n\n\nexport function parseDataToArray(data) {\n    let array = []\n\n    data = getFullComments(data)\n    array = parseFullComments(data)\n    array = concatArray(array)\n    array = createCommentsArray(array)\n\n    return array\n}\n\nexport function getFullComments(data) {\n        const startMarker = '<div id=\"commentFullList\">',\n            finishMarker = '<div class=\"for-set-comment\">',\n\n            startIndex = data.indexOf(startMarker),\n            finishIndex = data.indexOf(finishMarker)\n\n        return data.substring(startIndex, finishIndex)\n    }\n\nexport function parseFullComments(data) {\n        let arrayText = []\n\n        let parser = new Parser({\n            ontext: (text) => {\n                text = text.trim()\n\n                if ((text.length === 1 && text === '0') ||\n                    (text.length > 1 && text !== 'удаленный комментарий')) {\n\n                    arrayText.push(text)\n                }\n            }\n        }, { decodeEntities: true })\n        \n        parser.write(data)\n        parser.end()\n\n        return arrayText\n    }\n\nexport function concatArray(array) {\n        let i = 0, temp = [], result = []\n\n        while(i < array.length) {\n            if (isScore(array[i])) {\n                if (temp.length > 3) temp = concatMessage(temp)\n                if (temp.length > 0) result.push(temp)\n\n                temp = []\n            }\n            temp.push(array[i++])\n        }\n        return result\n    }\n\nfunction isScore(text) {\n    return (text.startsWith('+') && parseInt(text)) || text === '0'\n}\n\nfunction concatMessage(array) {\n    let i = 3, message = ''\n\n    while (i < array.length) {\n        message += (\" \" + array[i++])\n    }\n    array[3] = message.trim()\n\n    return array.slice(0, 4)\n}\n\nexport function createCommentsArray(array) {\n    let comments = [], i = 0\n\n    while(i < array.length ) {\n        let row = array[i++], comment = {}\n\n        comment.scores = parseInt(row[0])   //comment vote\n        comment.username = row[1]           //comment username\n        comment.date = row[2]               //comment date\n        comment.message = row[3]            //comment message\n\n        if (comment && Object.keys(comment).length === 4\n                && comment.username\n                && comment.username !== 'undefined' \n                && comment.username.length) {\n\n            comments.push(comment)\n        }\n    }\n    return comments\n}\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport TopNav from './TopNav'\nimport Ratings from './Ratings'\nimport Overlay from './Overlay'\nimport './App.css'\n\nimport { parseDataToArray } from './utils/ParseUtil'\n\nconst DEFAULT_MONTH = 10\n// \tdaysInMonth = new Date(2018, MONTH, 0).getDate()\n\n// let localData = require('./resources/comments_' + (MONTH > 9 ? MONTH : '0' + MONTH) + '.json')\n// let localData = null\n\n// import jsonfile from 'jsonfile'\n\n\nclass App extends Component {\n  \tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tmonth: DEFAULT_MONTH, \n\t\t\tlocalData: null,\n\t\t\tloadedData: null,\n\t\t\tactiveRating: [],\n\t\t\topeningOverlay: false\n\t\t}\n  \t}\n\n  \tcomponentWillMount() {\n  \t\tthis._setData(DEFAULT_MONTH)\n  \t}\n\n  \thandleOpenRating(rating) {\n  \t\tthis.setState({ \n  \t\t\tactiveRating: rating,\n  \t\t\topeningOverlay: true\n  \t\t})\n  \t}\n\n  \thandleCloseOverlay() {\n  \t\tthis.setState({ openingOverlay: false })\n  \t}\n\n  \thandleChangePeriod(month) {\n  \t\tif (this.state.month !== month)\tthis._setData(month)\n  \t}\n\n  \trender() {\n\n  \t\tconst { month, localData, loadedData, activeRating, openingOverlay } = this.state,\n  \t\t\tdaysInMonth = new Date(2018, month, 0).getDate()\n\n\t\treturn (\n\t  \t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<TopNav />\n\n\t\t\t\t{ \n\t\t\t\t\tlocalData \n\t\t\t\t\t\t? \t<Ratings \n\t\t\t\t\t\t\t\tdata={ localData } \n\t\t\t\t\t\t\t\tmonth={ month } \n\t\t\t\t\t\t\t\tchangePeriod={ this.handleChangePeriod.bind(this) }\n\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) } \n\t\t\t\t\t\t\t/> \n\n\t\t\t\t\t\t: !localData && loadedData.length === daysInMonth\n\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<Ratings \n\t\t\t\t\t\t\t\t\tdata={ [].concat(...loadedData) } \n\t\t\t\t\t\t\t\t\tmonth={ month } \n\t\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) }\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Loading data.......' \n\t\t\t\t}\n\n\t\t\t\t<Overlay \n\t\t\t\t\tcontent={ activeRating } \n\t\t\t\t\topening={ openingOverlay } \n\t\t\t\t\tclose={ this.handleCloseOverlay.bind(this) } \n\t\t\t\t/>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_setData(month) {\n  \t\tlet localData = require('./resources/comments_' + (month > 9 ? month : '0' + month) + '.json')\n\n  \t\tif (localData) {\n  \t\t\tconsole.log('success load local data from', month, 'month with', localData.length, 'comments')\n\n  \t\t\tthis.setState({ month, localData })\n\n  \t\t} else {\n\t  \t\tconsole.log('no local data! load from url...')\n\n  \t\t\tlet date = new Date(2018, month - 1, 1), \n  \t\t\t\tdaysInMonth = new Date(2018, month, 0).getDate(), \n  \t\t\t\turl = ''\n\n  \t\t\tfor (let i = 0; i < daysInMonth; i++) {\n\t\t\t\turl = 'https://minfin.com.ua/' + this._formatDate(date) + '/currency/'\n\t\t\t\tthis._loadData(url)\t\t\n\t\t\t\tdate.setDate(date.getDate() + 1)\n\t\t\t}\n  \t\t}\n  \t}\n\n  \t_loadData(url) {\n\t\tfetch(\"https://cors.io/?\" + url)\n\t  \t\t.then(response => {\n\t\t  \t\tconsole.log(url + \" -> \" + response.ok);\n\t\t  \t\tif(response.ok) {\n\t\t\t\t\treturn response.text()\n\t\t  \t\t} else {\n\t\t\t\t\t// throw new Error(\"Can't get data from \" + url)\n\t\t  \t\t}         \n\t  \t\t})\n\t  \t\t.then(page => {\n\t\t  \t\tlet newData = page ? parseDataToArray(page) : [],\n\t\t  \t\t\t{ loadedData } = this.state\n\n\t\t  \t\tloadedData.push(newData)\n\t\t  \t\tthis.setState({ loadedData })\n\n\t\t  \t\t// this._writeJsonFile(data)\n\t  \t\t})\n\t  \t\t.catch(err => {\n\t\t\t\tconsole.log(\"failed to load \", url, err.message)\n\t  \t\t})\n  \t}\n\n  \t_formatDate(date) {\n\t\tlet year = date.getFullYear(),\n\t\t\tmonth = date.getMonth() + 1,\n\t\t\tday = date.getDate()\n\n\t\tif (day < 10) {\n\t\t  day = '0' + day;\n\t\t}\n\t\tif (month < 10) {\n\t\t  month = '0' + month;\n\t\t}\n\n\t\treturn (year + '/' + month + '/' + day)\n  \t}\n\n  \t// \t_writeJsonFile(data) {\n\t// \t\tconst file = '../tmp/data.json'\n \n\t// \t\tjsonfile.writeFile(file, JSON.stringify(data))\n  \t// \t\t\t.then(res => {\n  \t//   \t\t\tconsole.log('Write complete')\n  \t// \t\t\t})\n  \t// \t\t\t.catch(error => console.error(error))\t\n  \t// \t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}