{"version":3,"sources":["resources sync /^/.//comments_.*/.json$","utils/UsersUtil.js","utils/RatingsUtil.js","Content.js","utils/WinnersUtil.js","Header.js","TopNav.js","utils/ParseUtil.js","App.js","serviceWorker.js","index.js"],"names":["map","./comments_01.json","./comments_02.json","./comments_03.json","./comments_04.json","./comments_05.json","./comments_06.json","./comments_07.json","./comments_08.json","./comments_09.json","./comments_10.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","createUsersObj","data","comments","user","temp","commentsByUsers","forEach","comment","username","toConsumableArray","concat","createObjCommentsByUsers","RATINGS","mostPopularMembers","mostPopularComments","mostActiveMembers","bestMembers","bestNewsBots","worstNewsBots","mrShort","mrLong","mostPopularNews","mostPopularWord","days","createRatingsObj","usersObj","daysInMonth","array","arrayUsersVotes","scores","totalVotes","commentIsNews","vote","Math","round","push","createArrayUsersByCommentsVotes","sort","a","b","sortUsersByVotes","sortCommentsByVotes","sortComments","arrayUsersQuantities","length","quantity","createArrayUsersByCommentsQuantities","sortUsersByTotalComments","mostValuableMembers","votes","member","sortUsersByAverageVote","membersObj","members","addScore","userScores","i","getMembersRating","arrayMembers","sortUsersByScores","sortUsersByCommentsWithLinks","best","worst","sortUsersByMessagesLength","short","long","filter","message","indexOf","sortMessagesWithLinksByVotes","wordsObj","wordScores","toLowerCase","replace","split","word","createArrayWordsFromCommentMessage","createWordsObj","sortWordsInMessages","arrayBest","arrayUsersWithLinks","_loop","createArrayUsersWithLinkInComments","arrayWorst","result","arrayShort","averageMessagesLength","summ","messages","totalLength","createArrayUsersByAverageLengthMessages","arrayLong","Content","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","ratings","winners","_createDataObjects","_this$state","_this$props","props","month","openRating","JSON","stringify","react_default","createElement","className","key","onClick","_this$props2","Date","getDate","WINNERS","maxScores","createWinnersObj","setState","Component","Header","TopNav","alert","href","openRules","type","placeholder","parseDataToArray","row","parseInt","date","createCommentsArray","text","startsWith","concatMessage","concatArray","arrayText","parser","Parser","ontext","trim","decodeEntities","write","end","parseFullComments","startIndex","finishIndex","substring","getFullComments","slice","localData","require","App","activeRating","openingRating","_setData","rating","console","log","_ref","_this2","src_Header_0","src_TopNav_0","src_Content_0","handleOpenRating","bind","apply","style","width","handleCloseRating","rate","url","_formatDate","_loadData","setDate","_this3","fetch","then","response","ok","page","newData","catch","err","year","getFullYear","getMonth","day","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb287694.chunk.js","sourcesContent":["var map = {\n\t\"./comments_01.json\": 65,\n\t\"./comments_02.json\": 66,\n\t\"./comments_03.json\": 67,\n\t\"./comments_04.json\": 68,\n\t\"./comments_05.json\": 69,\n\t\"./comments_06.json\": 70,\n\t\"./comments_07.json\": 71,\n\t\"./comments_08.json\": 72,\n\t\"./comments_09.json\": 73,\n\t\"./comments_10.json\": 74\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 64;","export function createUsersObj(data) {\n\tlet commentsByUsers = createObjCommentsByUsers(data)\n\n\treturn commentsByUsers\n}\n\nfunction createObjCommentsByUsers(comments) {\n\tlet user = '', temp = [], commentsByUsers = {} // { username: [ comments ] }\n\n\tcomments.forEach(comment => {\n\t\tuser = comment.username\n\t\ttemp = commentsByUsers[user] || []\n\t\tcommentsByUsers[user] = [ ...temp, comment ]\t\t\n\t})\n\n\treturn commentsByUsers\t\n}","const RATINGS = {\n\tmostPopularMembers: [],\n\tmostPopularComments: [],\n\tmostActiveMembers: [],\n\tbestMembers: [],\n\tbestNewsBots: [],\n\tworstNewsBots: [],\n\tmrShort: [],\n\tmrLong: [],\n\tmostPopularNews: [],\n\tmostPopularWord: []\n}\n\nlet commentsByUsers = {}, // { user: [ comments ] }\n\tdays = 30\n\nexport function createRatingsObj(comments, usersObj, daysInMonth) {\n\n\tcommentsByUsers = usersObj\n\tdays = daysInMonth\n\n\tRATINGS.mostPopularMembers\t = sortUsersByVotes()\n\tRATINGS.mostPopularComments\t = sortComments(comments)\n\tRATINGS.mostActiveMembers\t = sortUsersByTotalComments()\n\tRATINGS.mostValuableMembers\t = sortUsersByAverageVote()\n\tRATINGS.bestMembers\t\t\t = sortUsersByScores()\n\tRATINGS.bestNewsBots\t\t = sortUsersByCommentsWithLinks().best\n\tRATINGS.worstNewsBots\t\t = sortUsersByCommentsWithLinks().worst\n\tRATINGS.mrShort\t\t\t\t = sortUsersByMessagesLength().short\n\tRATINGS.mrLong\t\t\t\t = sortUsersByMessagesLength().long\n\tRATINGS.mostPopularNews\t\t = sortMessagesWithLinksByVotes(comments)\n\tRATINGS.mostPopularWord\t\t = sortWordsInMessages(comments)\n\n\t/*\n\t\tprint ratings in console\n\t*/\n\t// for (let rating in RATINGS) {\n\t// \tconsole.log('RATING', rating, ':')\n\t// \tfor (let i = 0; i < 10; i++) {\n\t// \t\tlet array = RATINGS[rating]\n\t// \t\tif (i < array.length)\n\t// \t\t\tconsole.log(i+1, JSON.stringify(array[i]))\n\t// \t}\t\t\n\t// }\n\n\treturn RATINGS\n}\n\n/*===========================================================\n\tCOMMON FUNCTIONS\n===========================================================*/\nfunction sortCommentsByVotes(comments) {\n\treturn comments.sort((a, b) => {\n\t\ta.scores = a.vote\n\t\treturn b.vote - a.vote\n\t})\n}\n\nfunction commentIsNews(comment) {\n\treturn comment.message && comment.message.indexOf('http') >= 0\n}\n\nfunction createArrayUsersByCommentsQuantities() {\n\tlet arrayUsersQuantities = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tscores = Math.round(commentsByUsers[username].length / days * 10) / 10\n\n\t\tarrayUsersQuantities.push({ \n\t\t\tusername,\n\t\t\tquantity: commentsByUsers[username].length,\n\t\t\tdays,\n\t\t\tscores\n\t\t})\n\t}\n\n\treturn arrayUsersQuantities\n}\n\nfunction createArrayUsersByCommentsVotes() {\n\tlet arrayUsersVotes = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\t// comments with news not includes!\n\t\t\tif (!commentIsNews(comment)) totalVotes += comment.vote\n\t\t})\n\n\t\tscores = Math.round(totalVotes / days * 10) / 10\n\n\t\tarrayUsersVotes.push({ \n\t\t\tusername,\n\t\t\ttotalVotes,\n\t\t\tdays,\n\t\t\tscores\n\t\t})\n\t}\n\n\treturn arrayUsersVotes\n}\n\nfunction createArrayUsersWithLinkInComments() {\n\tlet arrayUsersWithLinks = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet quantity = 0, totalVotes = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\tif (commentIsNews(comment)) {\n\t\t\t\tquantity++\n\t\t\t\ttotalVotes += comment.vote\n\t\t\t}\n\t\t})\n\n\t\t// let scores = (totalVotes && quantity) ? (totalVotes / quantity) : 0\n\t\tif (quantity && quantity >= days) {\n\t\t\tscores = Math.round(totalVotes / quantity * 10) / 10\n\n\t\t\tarrayUsersWithLinks.push({ \n\t\t\t\tusername,\n\t\t\t\ttotalVotes,\n\t\t\t\tquantity,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\n\treturn arrayUsersWithLinks\n}\n\nfunction createArrayUsersWithoutLinkInComments() {\n\tlet arrayUsersWithLinks = [], scores = 0\n\n\tfor (let username in commentsByUsers) {\n\t\tlet quantity = 0\n\t\tcommentsByUsers[username].forEach(comment => {\n\t\t\tif (!commentIsNews(comment)) quantity++\n\t\t})\n\n\t\tif (quantity) {\n\t\t\tscores = Math.round(quantity / days * 10) / 10\n\n\t\t\tarrayUsersWithLinks.push({ \n\t\t\t\tusername,\n\t\t\t\tquantity,\n\t\t\t\tdays,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\n\treturn arrayUsersWithLinks\n}\n\nfunction createArrayUsersByAverageLengthMessages() {\n\tlet array = []\n\n\tfor (let username in commentsByUsers) {\n\t\tlet summ = 0, averageMessagesLength = 0, messages = commentsByUsers[username]\n\n\t\tmessages.forEach(comment => { \n\t\t\tif (comment.message) summ += comment.message.length\n\t\t}) \n\n\t\taverageMessagesLength = Math.round(summ / messages.length * 10) / 10\n\n\t\tif (username !== 'undefined' && messages.length >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername,\n\t\t\t\ttotalLength: summ,\n\t\t\t\tquantity: messages.length,\n\t\t\t\tscores: averageMessagesLength\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST MEMBER\n*/\n\nfunction getMembersRating() {\n\tlet scores = 0, members = {} // { username: scores }\n\n\tfunction addScore(username, userScores) {\n\t\tif (!members[username]) members[username] = userScores\n\t\telse members[username] += userScores\n\t}\n\n\t/*\n\t\tconcat 3 ratings \n\t\tscore = length of ranking - place in the ranking\n\t\tsumm 3 scores\n\t*/\n\tRATINGS.mostPopularMembers.forEach((user, i) => {\n\t\tscores = RATINGS.mostPopularMembers.length - i\n\t\taddScore(user.username, scores)\n\t})\n\n\tRATINGS.mostActiveMembers.forEach((user, i) => {\n\t\tscores = RATINGS.mostActiveMembers.length - i\n\t\taddScore(user.username, scores)\n\t})\n\n\tRATINGS.mostValuableMembers.forEach((user, i) => {\n\t\tscores = RATINGS.mostValuableMembers.length - i\n\t\taddScore(user.username, scores)\n\t})\t\n\t\n\treturn members\n}\n\nfunction sortUsersByScores() {\n\tlet membersObj = getMembersRating(), arrayMembers = []\n\n\tfor (let username in membersObj) {\n\t\tarrayMembers.push({ \n\t\t\tusername, \n\t\t\tscores: membersObj[username] \n\t\t})\n\t}\n\n\tarrayMembers.sort((a, b) => b.scores - a.scores )\n\n\treturn arrayMembers\t\n}\n\n/*===========================================================\n\tMOST POPULAR MEMBER\n\tscores = total votes of member / days\n*/\n\nfunction sortUsersByVotes() {\n\tlet array = createArrayUsersByCommentsVotes()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tMOST POPULAR COMMENT\n\tscores = comment with max vote\n*/\n\nfunction sortComments(comments) {\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\treturn sortedComments\n}\n\n/*===========================================================\n\tMOST ACTIVE MEMBER\n\tscores = quantity of comments / days\n*/\n\nfunction sortUsersByTotalComments() {\n\tlet array = createArrayUsersByCommentsQuantities()\n\t// let array = createArrayUsersWithoutLinkInComments()\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*==========================================================\n\tMOST VALUABLE MEMBER\n\tscores = total votes of member / quantity of comments\n*/\n\nfunction sortUsersByAverageVote() {\n\tlet array = [], quantity = 0, votes = 0\n\n\tRATINGS.mostPopularMembers.forEach(member => {\n\t\tvotes = member.totalVotes\n\t\tquantity = commentsByUsers[member.username].length\n\n\t\tif (quantity >= days) {\n\t\t\tarray.push({\n\t\t\t\tusername: member.username,\n\t\t\t\tvotes,\n\t\t\t\tquantity,\n\t\t\t\tscores: Math.round(votes / quantity * 10) / 10\n\t\t\t})\t\t\t\n\t\t}\n\n\t})\n\n\tarray.sort((a, b) => b.scores - a.scores )\n\n\treturn array\n}\n\n/*===========================================================\n\tBEST NEWS BOT\n\tscores = max total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n\n\tWORST NEWS BOT\n\tscores = min total votes in comments with links / quantity comments with links\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByCommentsWithLinks() {\n\tlet arrayBest = createArrayUsersWithLinkInComments(days),\n\t\tarrayWorst = [].concat(arrayBest),\n\t\tresult = {}\n\n\tarrayBest.sort((a, b) => b.scores - a.scores )\n\tarrayWorst.sort((a, b) => a.scores - b.scores )\n\n\tresult.best = arrayBest\n\tresult.worst = arrayWorst\n\n\treturn result\n}\n\n/*===========================================================\n\tMR. SHORT\n\tscores = min total length of message / quantity of message\n\t(quantity must be more than \"days\")\n\n\tMR. LONG TONGUE\n\tscores = max total length of message / quantity of message\n\t(quantity must be more than \"days\")\n*/\n\nfunction sortUsersByMessagesLength() {\n\tlet arrayShort = createArrayUsersByAverageLengthMessages(days),\n\t\tarrayLong = [].concat(arrayShort),\n\t\tresult = {}\n\n\tarrayShort.sort((a, b) => a.scores - b.scores)\n\tarrayLong.sort((a, b) => b.scores - a.scores)\n\n\tresult.short = arrayShort\n\tresult.long = arrayLong\n\n\treturn result\n}\n\n/*===========================================================\n\tMOST POPULAR NEWS\n\tscores = max total votes in comment with link\n*/\n\nfunction sortMessagesWithLinksByVotes(comments) {\n\tlet sortedComments = sortCommentsByVotes(comments)\n\n\tlet commentsWithLinks = sortedComments\n\t\t.filter(comment => {\n\t\t\tif (comment.message) return comment.message.indexOf('http') >= 0 \n\t\t})\n\n\treturn commentsWithLinks\n}\n\n/*===========================================================\n\tMOST POPULAR WORD\n\tscores = max popular word in comments / days\n*/\n\nfunction sortWordsInMessages(comments) {\n\tlet array = [], scores = 0, wordsObj = createWordsObj(comments)\n\n\tfor (let word in wordsObj) {\n\t\tscores = Math.round(wordsObj[word] / days * 10) / 10\n\n\t\tif (scores > 1) {\n\t\t\tarray.push({\n\t\t\t\tword,\n\t\t\t\tquantity: wordsObj[word],\n\t\t\t\tdays,\n\t\t\t\tscores\n\t\t\t})\n\t\t}\n\t}\n\tarray.sort((a, b) => b.scores - a.scores)\n\n\treturn array\n}\n\nfunction createWordsObj(comments) {\n\tlet wordsObj = {}, wordScores = 0\n\n\tcomments.forEach(comment => {\n\t\tlet arrayMessage = createArrayWordsFromCommentMessage(comment)\n\n\t\tarrayMessage.forEach(word => {\n\t\t\twordScores = wordsObj[word] ? wordsObj[word] + 1 : 1\n\t\t\twordsObj[word] = wordScores\n\t\t})\n\t})\n\treturn wordsObj\n}\n\nfunction createArrayWordsFromCommentMessage(comment) {\n\tlet message = comment.message \n\t\t? comment.message.toLowerCase()\n\t\t\t.replace(/[.,?!()-=*1234567890]/g, '')\n\t\t: ''\n\n\treturn message.split(' ').filter(word => word.length > 3)\n}","import React, { Component } from 'react'\nimport './Content.css'\n\nimport { createUsersObj } from './utils/UsersUtil'\nimport { createRatingsObj } from './utils/RatingsUtil'\nimport { createWinnersObj } from './utils/WinnersUtil'\n\nclass Content extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tusers: {}, \t\t\t// { user: [ comments ] }\n\t\t\tratings: {}, \t\t// { rating: [ all rating ] }\n\t\t\twinners: {} \t\t// { nominant: [ 1 or similars ] }\n\t\t}\n  \t}\n\n  \tcomponentDidMount() {\n  \t\tthis._createDataObjects()\n  \t}\n\n  \trender() {\n  \t\tlet { users, ratings, winners } = this.state\n\n  \t\tconst { data, month, openRating } = this.props,\n  \t\t\tjsonText = JSON.stringify(data)\n\n\t\treturn (\n\t  \t\t<div className=\"Content\">\n\t\t\t\t<section>\n\t\t\t\t{\n\t\t  \t\t\t// array.map((comment, i) => \n\t\t  \t\t\t// \t<p key={i}>\n\t\t  \t\t\t// \t\t{comment.toString()}\n\t\t  \t\t\t// \t</p>\n\t\t  \t\t\t// )\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\t// array.map((comment, i) => \n\t\t  \t\t\t// \t<div key={i}>\n\t\t  \t\t\t// \t\t<span>vote: {comment.vote}</span>\n\t\t  \t\t\t// \t\t<span>name: {comment.username}</span>\n\t\t  \t\t\t// \t\t<span>date: {comment.date}</span>\n\t\t  \t\t\t// \t\t<span>message: {comment.message}</span>\n\t\t  \t\t\t// \t</div>\n\t\t  \t\t\t// )\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\tusers && ratings && winners ? \n\t\t  \t\t\t\t<div>\n\t\t  \t\t\t\t\t<p>MONTH: { month }</p>\n\t\t  \t\t\t\t\t<p>\n\t\t  \t\t\t\t\t\t<span>All members: { Object.keys(users).length }</span><br />\n\t\t  \t\t\t\t\t\t<span>All comments: { data.length }</span><br />\n\t\t  \t\t\t\t\t</p>\n\t\t  \t\t\t\t{\n\t\t  \t\t\t\t\tObject.keys(winners).map((key, i) => \t\t  \t\t\t\t\t\n\t\t  \t\t\t\t\t\t<p key={i} \n\t\t  \t\t\t\t\t\t\tclassName='rating-block' \n\t\t  \t\t\t\t\t\t\tonClick={ () => openRating(ratings[key]) }\n\t\t  \t\t\t\t\t\t>\n\t\t  \t\t\t\t\t\t\t<span className='title'>{[key]}</span>\n\t\t  \t\t\t\t\t\t\t<span className='winner'>{ JSON.stringify(winners[key]) }</span>\n\t\t  \t\t\t\t\t\t</p>\t\t  \t\t\t\t\t\n\t\t  \t\t\t\t\t)\n\t\t  \t\t\t\t}\n\t\t  \t\t\t\t</div>\n\t\t  \t\t\t: 'Parsing data.....'\n\t\t  \t\t}\n\t\t  \t\t{\n\t\t  \t\t\t// jsonText\n\t\t  \t\t}\n\t\t\t\t</section>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_createDataObjects() {\n  \t\tlet users, ratings, winners\n\n  \t\tconst { data, month } = this.props,\n  \t\t\tdaysInMonth = new Date(2018, month, 0).getDate()\n\n  \t\tif (data && data.length) {\n  \t\t\tusers = createUsersObj(data)\n  \t\t\tratings = createRatingsObj(data, users, daysInMonth)\n  \t\t\twinners = createWinnersObj(ratings)\n\n  \t\t\tthis.setState({ users, ratings, winners })\n  \t\t}\n  \t}\n}\n\nexport default Content\n","// const WINNERS = {\n// \tmostPopularMembers: [],\n// \tmostPopularComments: [],\n// \tmostActiveMembers: [],\n// \tbestMembers: [],\n// \tbestNewsBots: [],\n// \tworstNewsBots: [],\n// \tmrShort: [],\n// \tmrLong: [],\n// \tmostPopularNews: [],\n// \tmostPopularWord: []\n// }\n\nexport function createWinnersObj(RATINGS) {\n\tlet WINNERS = {}, maxScores = 0\n\n\tfor (let key in RATINGS) {\n\t\t// WINNERS[key] = getArrayWinners(RATINGS[key])\n\n\t\tmaxScores = RATINGS[key][0].scores\n\t\t\n\t\tWINNERS[key] = RATINGS[key].filter(member => member.scores === maxScores)\n\n\t\t// if (key === 'mostPopularWord') RATINGS[key].forEach(member => { console.log(member) })\n \t}\n\t\n\t// WINNERS.mostPopularMembers\t = getArrayWinners(RATINGS.mostPopularMembers, 'votes')\n\t// WINNERS.mostPopularComments\t = getArrayWinners(RATINGS.mostPopularComments, 'vote')\n\t// WINNERS.mostActiveMembers\t = getArrayWinners(RATINGS.mostActiveMembers, 'totalComments')\n\t// WINNERS.bestMembers\t\t\t = getArrayWinners(RATINGS.bestMembers, 'score')\n\t// WINNERS.bestNewsBots\t\t \t = getArrayWinners(RATINGS.bestNewsBots, 'commentsWithLinks')\n\t// WINNERS.worstNewsBots\t\t = getArrayWinners(RATINGS.worstNewsBots, 'commentsWithLinks')\n\t// WINNERS.mrShort\t\t\t\t = getArrayWinners(RATINGS.mrShort, 'averageLength')\n\t// WINNERS.mrLong\t\t\t\t = getArrayWinners(RATINGS.mrLong, 'averageLength')\n\t// WINNERS.mostPopularNews\t\t = getArrayWinners(RATINGS.mostPopularNews, 'vote')\n\t// WINNERS.mostPopularWord\t\t = getArrayWinners(RATINGS.mostPopularWord, 'totalWords')\n\n\treturn WINNERS\n}\n\n// function getArrayWinners(sortedArray) {\n// \tlet result = [ sortedArray[0] ], i = 1, key = 'scores'\n\n// \twhile (i < sortedArray.length - 1 && \n// \t\tsortedArray[i][key] === sortedArray[i - 1][key]) {\n\n// \t\tresult.push(sortedArray[i++])\n// \t}\n\n// \treturn result\n// }\n","import React, { Component } from 'react'\nimport './Header.css'\n\nclass Header extends Component {\n  \trender() {       \n\t\treturn (\n\t\t\t<header className=\"Header\">\n\t\t  \t\t<p>\n\t\t\t\t\t<span>minfin</span><span>members</span>\n\t\t  \t\t</p>\n\t\t\t</header>\n\t\t)\n  \t}\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './TopNav.css'\n\nclass TopNav extends Component {\n\n\topenRules() {\n\t\talert('RULES')\n\t}\n\n  \trender() {       \n\t\treturn (\n\t\t\t<div className=\"topnav\">\n\t\t\t  \t<a href=\"#rules\" onClick={ () => this.openRules() }>Open rules</a>\n\t\t\t  \t<input type=\"text\" placeholder=\"Enter your name...\" />\n\t\t\t</div>\n\t\t)\n  \t}\n}\n\nexport default TopNav","import { Parser } from 'htmlparser2'\n\n\n\nexport function parseDataToArray(data) {\n    let array = []\n\n    data = getFullComments(data)\n    array = parseFullComments(data)\n    array = concatArray(array)\n    array = createCommentsArray(array)\n\n    return array\n}\n\nexport function getFullComments(data) {\n        const startMarker = '<div id=\"commentFullList\">',\n            finishMarker = '<div class=\"for-set-comment\">',\n\n            startIndex = data.indexOf(startMarker),\n            finishIndex = data.indexOf(finishMarker)\n\n        return data.substring(startIndex, finishIndex)\n    }\n\nexport function parseFullComments(data) {\n        let arrayText = []\n\n        let parser = new Parser({\n            ontext: (text) => {\n                text = text.trim()\n\n                if ((text.length === 1 && text === '0') ||\n                    (text.length > 1 && text !== 'удаленный комментарий')) {\n\n                    arrayText.push(text)\n                }\n            }\n        }, { decodeEntities: true })\n        \n        parser.write(data)\n        parser.end()\n\n        return arrayText\n    }\n\nexport function concatArray(array) {\n        let i = 0, temp = [], result = []\n\n        while(i < array.length) {\n            if (isScore(array[i])) {\n                if (temp.length > 3) temp = concatMessage(temp)\n                if (temp.length > 0) result.push(temp)\n\n                temp = []\n            }\n            temp.push(array[i++])\n        }\n        return result\n    }\n\nfunction isScore(text) {\n    return (text.startsWith('+') && parseInt(text)) || text === '0'\n}\n\nfunction concatMessage(array) {\n    let i = 3, message = ''\n\n    while (i < array.length) {\n        message += (\" \" + array[i++])\n    }\n    array[3] = message.trim()\n\n    return array.slice(0, 4)\n}\n\nexport function createCommentsArray(array) {\n    let comments = [], i = 0\n\n    while(i < array.length ) {\n        let row = array[i++], comment = {}\n\n        comment.vote = parseInt(row[0])\n        comment.username = row[1]\n        comment.date = row[2]\n        comment.message = row[3]\n\n        if (Object.keys(comment).length === 4 \n                && comment\n                && comment.username\n                && comment.username !== 'undefined' \n                && comment.username.length) {\n\n            comments.push(comment)\n        }\n    }\n    return comments\n}\n","import React, { Component } from 'react'\nimport Content from './Content'\nimport Header from './Header'\nimport TopNav from './TopNav'\nimport './App.css'\n\nimport { parseDataToArray } from './utils/ParseUtil'\n\nconst MONTH = 9,\n\tdaysInMonth = new Date(2018, MONTH, 0).getDate()\n\nlet localData = require('./resources/comments_' + (MONTH > 9 ? MONTH : '0' + MONTH) + '.json')\n// let localData = null\n\n// import jsonfile from 'jsonfile'\n\n\nclass App extends Component {\n  \tconstructor() {\n\t\tsuper()\n\t\tthis.state = { \n\t\t\tdata: [],\n\t\t\tactiveRating: [],\n\t\t\topeningRating: false\n\t\t}\n  \t}\n\n  \tcomponentDidMount() {\n  \t\tthis._setData(MONTH)\n  \t}\n\n  \thandleOpenRating(rating) {\n  \t\tthis.setState({ \n  \t\t\tactiveRating: rating,\n  \t\t\topeningRating: true\n  \t\t})\n  \t\tconsole.log(this.state)\n  \t}\n\n  \thandleCloseRating() {\n  \t\tthis.setState({ openingRating: false })\n  \t}\n\n  \trender() {\n\n  \t\tconst { data, activeRating, openingRating } = this.state\n\n\t\treturn (\n\t  \t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<TopNav />\n\n\t\t\t\t{ \n\t\t\t\t\tlocalData \n\t\t\t\t\t\t? \t<Content \n\t\t\t\t\t\t\t\tdata={ localData } \n\t\t\t\t\t\t\t\tmonth={ MONTH } \n\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) } \n\t\t\t\t\t\t\t/> \n\n\t\t\t\t\t\t: !localData && data.length === daysInMonth\n\t\t\t\t\t\t\t? \n\t\t\t\t\t\t\t\t<Content \n\t\t\t\t\t\t\t\t\tdata={ [].concat(...data) } \n\t\t\t\t\t\t\t\t\tmonth={ MONTH } \n\t\t\t\t\t\t\t\t\topenRating={ this.handleOpenRating.bind(this) }\n\t\t\t\t\t\t\t\t/> \n\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t'Loading data.......' \n\t\t\t\t}\n\n\t\t\t\t<div className=\"overlay\" style={{ width: openingRating ? '100%' : '0%' }}>\n\t\t\t\t  \t<a href=\"javascript:void(0)\" \n\t\t\t\t  \t\tclassName=\"closebtn\" \n\t\t\t\t  \t\tonClick={ () => this.handleCloseRating() }\n\t\t\t\t  \t>&times;</a>\n\n\t\t\t\t  \t<div className=\"overlay-content\">\n\t\t\t\t  \t{\n\t\t\t\t  \t\tactiveRating.slice(0, 10).map((rate, i) => \n\t\t\t\t  \t\t\t<p key={i}>{i+1}: {rate.username}, score: {rate.scores}</p>\n\t\t\t\t  \t\t)\n\t\t\t\t  \t}\n\t\t\t\t  \t</div>\n\t\t\t\t</div>\n\t  \t\t</div>\n\t\t)\n  \t}\n\n  \t_setData(month) {\n  \t\tif (localData) {\n  \t\t\tconsole.log('success load local data from', month, 'month with', localData.length, 'comments')\n\n  \t\t\tthis.setState({ data: localData })\n\n  \t\t} else {\n\t  \t\tconsole.log('no local data! load from url...')\n\n  \t\t\tlet date = new Date(2018, month - 1, 1), url = ''\n\n  \t\t\tfor (let i = 0; i < daysInMonth; i++) {\n\t\t\t\turl = 'https://minfin.com.ua/' + this._formatDate(date) + '/currency/'\n\t\t\t\tthis._loadData(url)\t\t\n\t\t\t\tdate.setDate(date.getDate() + 1)\n\t\t\t}\n  \t\t}\n  \t}\n\n  \t_loadData(url) {\n\t\tfetch(\"https://cors.io/?\" + url)\n\t  \t\t.then(response => {\n\t\t  \t\tconsole.log(url + \" -> \" + response.ok);\n\t\t  \t\tif(response.ok) {\n\t\t\t\t\treturn response.text()\n\t\t  \t\t} else {\n\t\t\t\t\t// throw new Error(\"Can't get data from \" + url)\n\t\t  \t\t}         \n\t  \t\t})\n\t  \t\t.then(page => {\n\t\t  \t\tlet newData = page ? parseDataToArray(page) : [],\n\t\t  \t\t\t{ data } = this.state\n\n\t\t  \t\tdata.push(newData)\n\t\t  \t\tthis.setState({ data })\n\n\t\t  \t\t// this._writeJsonFile(data)\n\t  \t\t})\n\t  \t\t.catch(err => {\n\t\t\t\tconsole.log(\"failed to load \", url, err.message)\n\t  \t\t})\n  \t}\n\n  \t_formatDate(date) {\n\t\tlet year = date.getFullYear(),\n\t\t\tmonth = date.getMonth() + 1,\n\t\t\tday = date.getDate()\n\n\t\tif (day < 10) {\n\t\t  day = '0' + day;\n\t\t}\n\t\tif (month < 10) {\n\t\t  month = '0' + month;\n\t\t}\n\n\t\treturn (year + '/' + month + '/' + day)\n  \t}\n\n  \t// \t_writeJsonFile(data) {\n\t// \t\tconst file = '../tmp/data.json'\n \n\t// \t\tjsonfile.writeFile(file, JSON.stringify(data))\n  \t// \t\t\t.then(res => {\n  \t//   \t\t\tconsole.log('Write complete')\n  \t// \t\t\t})\n  \t// \t\t\t.catch(error => console.error(error))\t\n  \t// \t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}